

    _J_A_V_A___A_P_A_C_H_E___M_A_I_L___E_N_T_E_R_P_R_I_S_E___S_E_R_V_E_R_


  What is it?
  -----------

  The Java Apache Mail Enterprise Server (a.k.a. Apache James) is a 100% pure 
  Java server application designed to be a complete and portable enterprise 
  mail engine solution based on currently available open protocols 
  (SMTP, POP3, IMAP, HTTP).

  Development Status
  ------------------
  
  Apache James is currently under development. There is no working distribution
  or anything usable, yet. So, don't ask. This server will be heavily based on
  shared packages used by every server application developed by the Java Apache
  Project and we are currently trying to get those shared packages done 
  (log system, XML configurations, abstract servlet engine, abstract protocol
  handler, etc...) before start coding the server itself which should "glue"
  together these packages.
  
  Planned Features
  ----------------

  These are some of the planned features:
  
    o  complete portability:  Apache James will be a 100% pure Java application
       based on the Java 2 platform and on to of JavaMail extentions.
       
    o  protocol abstraction:  unlike other mail engines, protocols are seen only
       like "communication languages" ruling comunications between clients and
       the server. Apache James will not be tied to any particular protocol but
       will follow an abstracted server design (almost like JavaMail did on the
       client side)
       
    o  complete solution:  the mail system will be able to handle both mail
       transport and storage in a single server application. Apache James will
       work alone without the need or any other server or solution.
       
    o  servlet support:  Apache James will be the first ever mail server with
       MailServlet support. The Java Apache Project has submitted for review
       (to JavaSoft) a proposal to enhance the Servlet platform to support 
       other kinds of servers and servlet systems. Apache James will allow 
       users and developers to write powerful mail system enhancements using the 
       MailServlet framework we designed.
       
    o  resource abstraction:  like protocols, resources will be abstracted and,
       working thru defined interfaces (JavaMail for transport, JDBC for storage,
       servlet engine abstraction for servlets), the server will be highly 
       modular and reuse solutions from other projects or applications.
       
    o  secure and multi-threaded design:  based on the technology developed for
       the Apache JServ servlet engine, Apache James will have a careful, 
       security-oriented, full multi-threaded design, to allow performance, 
       scalability and mission-critical use.
       
    o  anything else you may want if you help us writing it :-)
       

  Available resources
  -------------------
  
  These are the currently available resources:
  
    o  The Mail Servlet proposal submitted for review to the JavaSoft Servlet
       API team (with MailServlet examples).
       
    o  The extended logging system
    
    o  The XML configuration engine
    

  Licensing and legal issues
  --------------------------

  For legal and licensing issues, please look in the legal section of
  the documentation or read the LICENSE file.

  Thanks.

                                           The Java Apache Project
                                           http://java.apache.org/