<?xml version='1.0'?>
<!--
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name='MailetSDK' default='deploy' basedir=".">

    <!-- Allow build.properties file in the SDK directory 
	   to override definitions here -->
    <property file='build.properties'/>

    <!-- Directory for the base James application installation -->
    <!-- Set this property in build.properties -->
    <property name='JAMES_HOME' value=".."/>

    <property name='build.dir' value='target'/>

    <!-- Mailet code developed developed locally -->
    <property name='src' value='src'/>
    <property name='src.java' value='${src}/java'/>
    <property name='src.test' value='${src}/test'/>
    <property name='classes' value='${build.dir}/classes'/>
    <property name='classes.test' value='${build.dir}/test-classes'/>

    <!-- Sample Mailet code and tests supplied with the SDK-->
    <property name='samples' value='samples'/>
    <property name='src.samples.java' value='${samples}/java'/>
    <property name='classes.samples' value='${build.dir}/sample-classes'/>
    <property name='classes.samples.test' value='${build.dir}/sample-test-classes'/>

    <!-- Replace this with the of the project being developed -->
    <property name='project.name' value='sample-mailet'/>
   
    <!-- Deployment and Assembling time configuration files for James -->
    <property name='conf.dir' value='src/conf'/>

    <!-- Libraries required to build the SAR -->
    <property name='lib.build' value='lib/build'/>
    <!-- Libraries James requires to be included in the SAR (excluding APIs) -->
    <property name='lib.james' value='${JAMES_HOME}/lib'/>
    <!-- Tools required to build the SAR -->
    <property name='lib.james.tools' value='${JAMES_HOME}/tools/lib'/>
    <!-- Any libraries placed in this directory will be included in the SAR -->
    <property name='lib.user' value='lib/user'/>
    <!-- Ant libraries which are required for testing should be placed in this directory -->
    <property name='lib.test' value='lib/test'/>
    <!-- Mailet APIs contained in this directory.
         Code should depend on these APIs rather than the container -->
    <property name='lib.mailet' value='lib/mailet'/>

    <!-- Build path for development code -->
    <path id='project.path'>
        <fileset dir='${lib.user}'>
            <include name='*.jar'/>
        </fileset>
        <fileset dir='${lib.mailet}'>
            <include name='*.jar'/>
        </fileset>
    </path>

    <!-- Build path for test code -->
    <path id='project.test.path'>
        <path refid="project.path"/>
        <fileset dir='${lib.test}'>
            <include name='*.jar'/>
        </fileset>
    </path>

    <!-- Path for build tools -->
    <path id='build.tools.path'>
        <fileset dir="${lib.build}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.james.tools}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Defines the SAR task -->
    <taskdef name="sar" classname="org.apache.avalon.phoenix.tools.tasks.Sar">
        <classpath refid='build.tools.path'/>
    </taskdef>

    <target name='clean' description="Cleans the build directory">
        <delete dir='${build.dir}'/>
    </target>

    <target name='build-project' description='Builds the project code (samples are excluded)'>
        <mkdir dir='${classes}'/>
        <mkdir dir='${classes.test}'/>
        <javac srcdir="${src}" destdir="${classes}" classpathref="project.path"/>
        <javac srcdir="${src.test}" destdir="${classes.test}" classpathref="project.test.path"/>
        <copy todir="${classes}">
            <fileset dir="${src}">
                <include name='*.properties'/>
            </fileset>
		</copy>
        <jar basedir="${classes}" destfile="${build.dir}/${project.name}.jar"/>
    </target>

    <target name='build-samples' description='Builds the samples supplied with the SDK' 
        unless='NO_MAILETSDK_SAMPLES'>
        <mkdir dir='${classes.samples}'/>
        <mkdir dir='${classes.samples.test}'/>
        <javac 
            srcdir="${src.samples.java}" 
            destdir="${classes.samples}" 
            classpathref="project.path"/>
        <jar 
            basedir="${classes.samples}" 
            destfile="${build.dir}/mailet-sdk-samples.jar"/>
    </target>

    <target name='dist' depends='build-project, build-samples'
        description='Creates a SAR for James (development version)'>
        <sar 
            sarfile="${build.dir}/james.sar" 
            config="${conf.dir}/james-config.xml"
            environment="${conf.dir}/james-server.xml" 
            assembly="${conf.dir}/james-assembly.xml">
            <lib dir='${lib.james}'>
                <include name='*.jar'/>
            </lib>
            <lib dir='${lib.mailet}'>
                <include name='*.jar'/>
            </lib>
            <lib dir="${lib.user}">
                <include name="*.jar"/>
            </lib>
            <lib dir="${lib.user}">
                <include name="*.jar"/>
            </lib>
            <!-- Include samples and projects (if they have been built) --> 
            <lib dir="${build.dir}">
                <include name="*.jar"/>
            </lib>
            <zipfileset dir='src/conf' prefix='conf'>
                <include name='**/*.xml'/>
            </zipfileset>
        </sar>
    </target>

    <target name='deploy' depends='dist' description='Deploys the SAR to JAMES_HOME'>
        <!-- clean out old configurations -->
        <delete dir="${JAMES_HOME}/apps/james"/>
        <copy file="${build.dir}/james.sar" todir="${JAMES_HOME}/apps"/>
    </target>
</project>