<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<project name="spring_integration" default="all">

    <property file="../include.properties"/>
    <property file="../default.properties"/>
    
    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
    </patternset>

    <dirname property="basedir" file="${ant.file}"/>

    <property name="compiler.args" value="${compiler.args}"/>

    <property name="output.dir" value="${basedir}/build/classes"/>

    <path id="bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <!-- from phoenix-deployment build.xml -->
    <path id="project.class.path.reused.from.phoenix.build.xml">
        <fileset dir="${lib.dir}">
            <include name="${avalon-framework.jar}"/>
            <include name="${avalon-framework-impl.jar}"/>
            <include name="${dns.jar}"/>
            <include name="${commons-collections.jar}"/>
            <include name="${commons-dbcp.jar}"/>
            <include name="${commons-pool.jar}"/>
            <include name="${jakarta-oro.jar}"/>
            <include name="${excalibur-pool-api.jar}"/>
            <include name="${excalibur-pool-impl.jar}"/>
            <include name="${excalibur-thread-api.jar}"/>
            <include name="${excalibur-datasource.jar}"/>
            <include name="${cornerstone-threads-api.jar}"/>
            <include name="${cornerstone-connection-api.jar}"/>
            <include name="${cornerstone-connection-impl.jar}"/>
            <include name="${cornerstone-store-api.jar}"/>
            <include name="${cornerstone-scheduler-api.jar}"/>
            <include name="${cornerstone-sockets-api.jar}"/>
            <include name="${cornerstone-datasources-api.jar}"/>
            <include name="${javax-mail.jar}"/>
            <include name="${javax-activation.jar}"/>
            <include name="${bcmail.jar}"/>
            <include name="${bcmail-workaround.jar}"/>
            <include name="${javax.management}"/>
            <include name="${jspf.jar}"/>
            <include name="${mstor.jar}"/>
            <include name="${commons-logging.jar}"/>
            <include name="${jdom.jar}"/>
            <include name="${xstream.jar}"/>

            <include name="${torque.jar}"/>
            <include name="${village.jar}"/>
            <include name="${commons-lang.jar}"/>
            <include name="${commons-configuration.jar}"/>

            <include name="${jsieve.jar}"/>
			<include name="${mailet.jar}"/>
            <include name="${commons-digester.jar}"/>
            <!-- TODO: include libraries without wildcards -->
            <include name="${path.lib.james}/${jars-prefix}*-api-${version}.jar"/>
            <include name="${path.lib.james}/${jars-prefix}*-library-${version}.jar"/>
            <include name="${path.lib.james}/${jars-prefix}*-function-${version}.jar"/>
        </fileset>
        <!--<pathelement path="${java.class.path}" />-->
        <!--<pathelement path="${build.classes}" />-->
    </path>

    <path id="classpath.phoenix.implementations">
        <fileset dir="${lib.dir}">
            <include name="${cornerstone-threads-impl.jar}"/>
            <include name="${cornerstone-connection-impl.jar}"/>
            <!-- TODO MISSING FROM STAGE <include name="${cornerstone-store-impl.jar}"/>-->
            <include name="${cornerstone-scheduler-impl.jar}"/>
            <include name="${cornerstone-sockets-impl.jar}"/>
            <include name="${cornerstone-datasources-impl.jar}"/>
            <include name="${excalibur-thread-impl.jar}"/>
        </fileset>
    </path>
    
    <path id="classpath.phoenix.runtime">
        <pathelement location="${basedir}/lib/avalon-logkit-2.1.jar"/>
        <pathelement location="${basedir}/lib/concurrent-1.3.4.jar"/>
        <!-- TODO shouldn't cornerstone-store-impl.jar be available from stage dir? -->
        <pathelement location="${basedir}/lib/cornerstone-store-impl-2.1.jar"/>
        <pathelement location="${basedir}/lib/derby.jar"/>
        <pathelement location="${basedir}/lib/excalibur-cli-1.0.jar"/>
        <pathelement location="${basedir}/lib/excalibur-extension-1.0a.jar"/>
        <pathelement location="${basedir}/lib/excalibur-instrument-api-2.1.jar"/>
        <pathelement location="${basedir}/lib/excalibur-instrument-manager-1.0.jar"/>
        <pathelement location="${basedir}/lib/excalibur-io-1.1.jar"/>
        <pathelement location="${basedir}/lib/excalibur-logger-2.1.jar"/>
        <pathelement location="${basedir}/lib/excalibur-monitor-2.1.jar"/>
        <pathelement location="${basedir}/lib/phoenix-client.jar"/>
        <pathelement location="${basedir}/lib/phoenix-engine.jar"/>
        <pathelement location="${basedir}/lib/spice-classman-1.0.jar"/>
        <pathelement location="${basedir}/lib/spice-configkit-1.1.2.jar"/>
        <pathelement location="${basedir}/lib/spice-loggerstore-0.5.jar"/>
        <pathelement location="${basedir}/lib/spice-salt-0.8.jar"/>
        <pathelement location="${basedir}/lib/spice-xmlpolicy-1.0.jar"/>
    </path>

    <path id="classpath.spring">
        <!-- TODO: remove from commons lists non-spring required libs --> 
        <pathelement location="${basedir}/lib/commons-attributes-api.jar"/>
        <pathelement location="${basedir}/lib/commons-attributes-compiler.jar"/>
        <pathelement location="${basedir}/lib/commons-beanutils.jar"/>
        <pathelement location="${basedir}/lib/commons-codec.jar"/>
        <pathelement location="${basedir}/lib/commons-collections.jar"/>
        <pathelement location="${basedir}/lib/commons-configuration-1.1.jar"/>
        <pathelement location="${basedir}/lib/commons-dbcp-1.2.1.jar"/>
        <pathelement location="${basedir}/lib/commons-digester.jar"/>
        <pathelement location="${basedir}/lib/commons-discovery.jar"/>
        <pathelement location="${basedir}/lib/commons-fileupload.jar"/>
        <pathelement location="${basedir}/lib/commons-httpclient.jar"/>
        <pathelement location="${basedir}/lib/commons-io.jar"/>
        <pathelement location="${basedir}/lib/commons-javaflow.jar"/>
        <pathelement location="${basedir}/lib/commons-lang.jar"/>
        <pathelement location="${basedir}/lib/commons-logging.jar"/>
        <pathelement location="${basedir}/lib/commons-pool-1.2.jar"/>
        <pathelement location="${basedir}/lib/commons-validator.jar"/>
        <pathelement location="${basedir}/lib/spring.jar"/>
    </path>

    <path id="classpath.unified.libs">
        <path refid="classpath.phoenix.runtime" />
        <path refid="classpath.phoenix.implementations" />
        <path refid="project.class.path.reused.from.phoenix.build.xml" />
        <path refid="classpath.spring" />
    </path>

    <path id="runclasspath">
        <path refid="classpath.unified.libs" />
        <pathelement location="${basedir}/src/main/config/"/>
    </path>

    <patternset id="excluded.from">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation">
        <patternset refid="excluded.from"/>
    </patternset>

    <path id="sourcepath">
        <dirset dir="${basedir}">
            <include name="src/main/java"/>
        </dirset>
    </path>


    <target name="clean">
        <delete dir="${output.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="all" depends="init, clean, compile" description="build all"/>

    <target name="compile" description="compile .java">
        <mkdir dir="${output.dir}"/>
        <javac destdir="${output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memoryMaximumSize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args}"/>
            <bootclasspath refid="bootclasspath"/>
            <classpath refid="classpath.unified.libs"/>
            <src refid="sourcepath"/>
        </javac>

        <copy todir="${output.dir}">
            <fileset dir="${basedir}/src/main/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="copy-configuration">
        <mkdir dir="${output.dir}"/>
        <copy todir="${output.dir}">
            <fileset dir="${basedir}/src/main/config">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="run" depends="compile, copy-configuration">
        <java classname="org.apache.james.container.spring.Main"
              classpath="${output.dir}"
              classpathref="runclasspath"
              fork="true" />
    </target>

</project>