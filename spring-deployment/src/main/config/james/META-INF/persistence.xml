<persistence xmlns="http://java.sun.com/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
    version="2.0">

    <persistence-unit name="James" transaction-type="RESOURCE_LOCAL">

        <!-- Mailbox stuff-->
        <class>org.apache.james.mailbox.jpa.mail.model.JPAHeader</class>
        <class>org.apache.james.mailbox.jpa.mail.model.JPAMailbox</class>
        <class>org.apache.james.mailbox.jpa.mail.model.openjpa.AbstractJPAMessage</class>
        <class>org.apache.james.mailbox.jpa.mail.model.openjpa.AbstractJPAMailboxMembership</class>
        <!-- This needs to get used when you want to use streaming. Remember to comment the following classes
             org.apache.james.mailbox.jpa.mail.model.JPAMailboxMembership
             org.apache.james.mailbox.jpa.mail.model.JPAMessage
             
             If you don't do this the EntityManager will get confused
         -->
         <!-- 
        <class>org.apache.james.mailbox.jpa.mail.model.openjpa.JPAStreamingMailboxMembership</class>
        <class>org.apache.james.mailbox.jpa.mail.model.openjpa.JPAStreamingMessage</class>
         -->
         
         <!-- Comment if you want to use streaming -->
        <class>org.apache.james.mailbox.jpa.mail.model.openjpa.JPAMailboxMembership</class>
        <class>org.apache.james.mailbox.jpa.mail.model.openjpa.JPAMessage</class>
        <class>org.apache.james.mailbox.jpa.mail.model.JPAProperty</class>
        <class>org.apache.james.mailbox.jpa.user.model.JPASubscription</class>

        <!-- UsersRepository -->
        <class>org.apache.james.userrepository.model.JPAUser</class>

        <!-- DomainList -->
        <class>org.apache.james.domain.model.JPADomain</class>

        <!-- VirtualUser -->
        <class>org.apache.james.vut.model.model.JPAVirtualUser</class>

        <properties>
            <!--  Create tables on startup -->
            <property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)"/>
            <!--  Create foreign keys on startup -->
            <property name="openjpa.jdbc.MappingDefaults" value="ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict"/>
            <!--  Reorder SQL statements to satisfy database foreign key constraints -->
            <property name="openjpa.jdbc.SchemaFactory" value="native(ForeignKeys=true)"/>
            <!--  Uncomment this if you want to see the generated SQL in the console.
            <property name="openjpa.Log" value="SQL=TRACE"/>
            -->
            <!--  Uncomment this if you want to get verbose OpenJPA log the console.
            <property name="openjpa.Log" value="DefaultLevel=TRACE"/>
            -->
        </properties>

    </persistence-unit>

</persistence>
