<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one   
  or more contributor license agreements.  See the NOTICE file 
  distributed with this work for additional information        
  regarding copyright ownership.  The ASF licenses this file   
  to you under the Apache License, Version 2.0 (the            
  "License"); you may not use this file except in compliance   
  with the License.  You may obtain a copy of the License at   
                                                               
    http://www.apache.org/licenses/LICENSE-2.0                 
                                                               
  Unless required by applicable law or agreed to in writing,   
  software distributed under the License is distributed on an  
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY       
  KIND, either express or implied.  See the License for the    
  specific language governing permissions and limitations      
  under the License.                                           
 -->

<!-- The User Storage block -->
<users-store>

    <!-- Configure User Repositories here. -->

    <!-- -->
    <!-- User repositories are required for the following purposes: -->
    <!--    - storing James user information, including forwards, aliases, -->
    <!--      and authentication data. -->
    <!--    - holding lists of users for the listserv mailet -->
    <!-- Currently, two different storage options are available: -->
    <!--    - file-based storage using Java serialization -->
    <!--    - database-backed storage -->
    <!-- (Use of database or file-system is defined on a "per-repository" basis) -->
    <!-- -->
    <!-- Note: One user repository is required for James: -->
    <!--   LocalUsers - the users for whom you are providing POP3, NNTP, or SMTP service -->
    <!-- -->
    <!-- Other repositories may be used by matchers or mailets. -->

    <!-- Default: File-based user repositories  Use these configurations to store user info in the filesystem  -->
    <!-- The LocalUsers repository, for storing James' User info. -->
    <!--
    <repository name="LocalUsers" class="org.apache.james.user.file.UsersFileRepository">
        <destination URL="file://var/users/"/>
        <ignoreCase>true</ignoreCase>
        <enableAliases>true</enableAliases>
        <enableForwarding>true</enableForwarding>
    </repository>
    -->

    <!-- Database backed user repositories -->
    <!-- -->
    <!-- Use these configurations to store user info in a database. -->
    <!-- Note: The <data-source> element must refer to a connection configured -->
    <!--       in the <database-connections> configuration section. -->
    <!-- The LocalUsers repository, for storing James' User info. -->
    <!-- 
    <repository name="LocalUsers" class="org.apache.james.user.jdbc.JamesUsersJdbcRepository" destinationURL="db://maildb/users">
        <sqlFile>file://conf/sqlResources.xml</sqlFile>
        <ignoreCase>true</ignoreCase>
        <enableAliases>true</enableAliases>
        <enableForwarding>true</enableForwarding>
    </repository>
    -->
    
    <!-- Read-Only LDAP based UsersRepository -->
    <!--
    <repository name="LocalUsers" class="org.apache.james.user.ldap.ReadOnlyUsersLDAPRepository" ldapHost="ldap://myldapserver:389" 
    	principal="uid=ldapUser,ou=system" credentials="password" userBase="ou=People,o=myorg.com,ou=system" userIdAttribute="uid"/>;
    -->
    
    
    <!-- JPA based backend. Support password algorithm are:
         MD5, SHA-256, SHA-512, NONE
     -->
    <repository name="LocalUsers" class="org.apache.james.user.jpa.JPAUsersRepository">
        <algorithm>MD5</algorithm>
    </repository>
    
    <!-- This is an example configuration including configuration for a list server. -->
    <!-- CHECKME: before uncommenting this, edit the configuration file's contents   -->
    <!-- -->
    <!-- Mailing list repositories  -->
    <!-- Add a user repository for each list -->
    <!-- TODO: add more examples  -->    
    <!--       
    <repository name="list-test" class="org.apache.james.user.file.UsersFileRepository">
       <destination URL="file://var/lists/list-test/"/>
    </repository>
    -->
    
</users-store>
