<?xml version="1.0"?>
<avalon>
    <blocks>

<!-- JAMES POP3 server Blocks -->

        <block class="org.apache.james.pop3server.POP3Server"
                serverName="James"
                implementedInterface=""
                help="This block impement a POP3 server. Il will look for mails
                    under [mailboxName].[username]">

            <port>110</port>
<!--        <servername> To override autodetected server name uncomment this. </servername> -->
            <pop3handler>
                <connectiontimeout help="After this time in milliseconds that no
                        command are received the connection will be closed">
                    120000 
                </connectiontimeout>
            </pop3handler>
        </block>

<!-- JAMES SMTP server Blocks -->

        <block class="org.apache.james.smtpserver.SMTPServer"
                serverName="James"
                implementedInterface=""
                help="This block implements a SMTP server. Incoming mails will be
                    delivered to the MailServer implementation">

            <port>25</port>
<!--        <servername> To override autodetected server name uncomment this. </servername> -->
            <smtphandler>
                <connectiontimeout help="After this time in milliseconds that no
                        command are received the connection will be closed">
                    120000 
                </connectiontimeout>
            </smtphandler>
        </block>

<!-- JAMES MailServer Implementation -->

        <block class="org.apache.james.james.James"
               serverName="James"
               implementedInterface="org.apache.avalon.blocks.MailServer">
            <servernames>
<!--            <servername> To override autodetected server names uncomment this. </servername> -->
<!--            <servername> To override autodetected server names uncomment this. </servername> -->
<!--            <servername> To override autodetected server names uncomment this. </servername> -->
            </servernames>
<!-- Place here the path where incoming mail are temporaly stored before beeing processed. (ex. file://c:/james/spool/) -->
            <spoolRepository> file://../mail/spool/ </spoolRepository>
            <mailboxName> localInbox </mailboxName>
<!-- The number of threads that spool and process messages from spoolRepository. -->
            <spoolmanagerthreads> 1 </spoolmanagerthreads>
<!-- ++++++++++++ MAIL SERVLET PIPE LINE +++++++++++++ -->
<!-- Configure your mail Servlet processing pipe here. -->
            <spoolmanager>
                <servlets rootpath="org.apache.james.james.servlet.">

<!-- Thise servlet acts as system servlet and provides local delivery -->
                    <servlet match="RecipientIsLocal" class="LocalDelivery">
                    </servlet>

<!-- These servlet act as system servlet and provides remote deliver -->
                    <servlet match="!HostIsLocal" class="RemoteDelivery">
                        <authoritative> true </authoritative>
                        <DNSservers>
<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- ____________ FILL ME _______________ place here your dns servers (ex. 212.216.176.33 etc.) -->
                            <server>  </server>
                            <server>  </server>
<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
                        </DNSservers>
<!-- Fill the repository path where to store temoporaly underiverable messages 
    (ex. file://c:/archivio/store/james/delayed/) -->
                        <repository> file://../mail/delayed/ </repository>
<!-- Delay time before retying send mail. Default is 5 hour: 6*60*60*1000 -->
                         <delayTime> 21600000 </delayTime>
                         <maxRetyes>5</maxRetyes>
                    </servlet>

<!-- The last servlet in the pipe is the one managing errors -->
                    <servlet match="All" class="ToRepository">
                        <repositoryPath help="Fill the repository path where error 
                                are stored.(ex. (file://../mail/errors/)">
                            file://../mail/errors/
                        </repositoryPath>
                        <passThrought> false </passThrought>
                    </servlet>
<!-- ++++++++++++ END OF MAIL SERVLET PIPE LINE +++++++++++++ -->
                </servlets>
            </spoolmanager>
        </block>

<!-- Block to manage JAMES users accounts -->

        <block class="org.apache.james.remotemanager.RemoteManager"
               serverName="James"
               implementedInterface="">
            <port>4555</port>
            <AdministratorAccounts>
                <Account login="root" password="root"/>
            </AdministratorAccounts>
                <connectiontimeout help="After this time in milliseconds that no
                        command are received the connection will be closed">
                    60000 
                </connectiontimeout>
        </block>

        <block class="org.apache.avalon.blocks.timeserver.TimeManager"
                serverName="all"
                implementedInterface="org.apache.avalon.blocks.TimeServer"
                help="Provide a simple interface to catch time events">
            <!-- No configurations needed for this block -->
        </block>

        <block class="org.apache.avalon.blocks.threadmanager.ThreadPool"
                serverName="all"
                implementedInterface="org.apache.avalon.blocks.ThreadManager"
                help="Takes care of execution of any Runnable in Avalon providing
                        a thread recycling capabilities">
            <levelcontroller help="Sets the level controller class for the thread pool">
                org.apache.java.recycle.GaussianController
            </levelcontroller>
            <capacity help="Sets thread pool initial capacity">
                64
            </capacity>
        </block>
    
        <block class="org.apache.avalon.blocks.omero.Omero"
               serverName="all"
               implementedInterface="org.apache.avalon.blocks.Logger"
               help="Provides a pluggable logging system">
            <timestamp>
                <granularity help="Sets the timestamp time granularity in 
                        milliseconds. If set to 0 means to use maximum time precision 
                        else timestam is calculated every 'granularity' milliseconds">
                    0
                </granularity>
                <format help="Define the format for the timestamp">
                    yyyy.MM.dd hh:mm:ss SSS 
                </format>
            </timestamp>
            <channels help="Every log call is performed througt a channel. 
                    The proposed pattern is: each application (Block) should use its own
                    channel to allow adminitrators to set what to log from that 
                    application and where to place logs. So if you plug a new server 
                    under Avalon you MUST place channel definition from that server
                    configuration file hereafter">
                <channel name="default"        loglevel="DEBUG"  logwriter="stdout"/>
                <channel name="system"         loglevel="DEBUG"  logwriter="infofile"/>
                <channel name="MasterStore"    loglevel="DEBUG"  logwriter="infofile"/>
                <channel name="ThreadManager"  loglevel="DEBUG"  logwriter="infofile"/>
                <channel name="TimeManager"    loglevel="DEBUG"  logwriter="infofile"/>
                <channel name="SocketManager"  loglevel="DEBUG"  logwriter="infofile"/>
                <channel name="RemoteManager"  loglevel="DEBUG"  logwriter="admin"/>
                <channel name="POP3Server"     loglevel="DEBUG"  logwriter="popfile"/>
                <channel name="SMTPServer"     loglevel="DEBUG"  logwriter="smtpfile"/>
                <channel name="JAMES"          loglevel="DEBUG"  logwriter="jamesfile"/>
                <channel name="Mail Servlet"   loglevel="DEBUG"  logwriter="jamesfile"/>
            </channels>
            <logwriters help="Each filtered channel goes to the specified logwriter.
                    Place here any additionl logwriter definition needed">
                <writer name="jamesfile" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination>
                        file://../logs/jamesinfo.log
                    </destination>
                    <buffersize>2048</buffersize>
                    <sleep>5000</sleep>
                </writer>
                <writer name="smtpfile" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination>
                        file://../logs/smtpinfo.log
                    </destination>
                    <buffersize>2048</buffersize>
                    <sleep>5000</sleep>
                </writer>
                <writer name="popfile" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination>
                        file://../logs/popinfo.log
                    </destination>
                    <buffersize>2048</buffersize>
                    <sleep>5000</sleep>
                </writer>
                <writer name="admin" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination>
                        file://../logs/admininfo.log
                    </destination>
                    <buffersize>2048</buffersize>
                    <sleep>5000</sleep>
                </writer>
                <writer name="stdout" class="org.apache.avalon.blocks.omero.StdoutWriter">
                    <destination>
                        stdout://
                    </destination>
                </writer>
                <writer name="infofile" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination>
                        file://../logs/info.log
                    </destination>
                    <buffersize>2048</buffersize>
                    <sleep>500</sleep>
                </writer>
            </logwriters>
        </block>
                
        <block class="org.apache.avalon.blocks.masterstore.MasterStore"
                serverName="all"
                implementedInterface="org.apache.avalon.blocks.Store"
                help="This is an imlpementation of the Store interface and 
                    provides a powerful interface to store any kind of objects. Its
                    power resides in its pluggable pattern.">
            <repositoriesDefinition help="Here goes Repository definitions. If
            an application needs its own Repository (see MessageContainerRepository
            for JAMES), it will place here its definition. These are default
            Repository.">
                <repository type="OBJECT" model="SYNCHRONOUS, ASYNCHRONOUS" 
                    destination="file://"
                    class="org.apache.avalon.blocks.masterstore.PersistentStore"/>
                <repository type="STREAM" model="SYNCHRONOUS, ASYNCHRONOUS"
                    destination="file://"
                    class="org.apache.avalon.blocks.masterstore.StreamStore"/>
                <repository type="MESSAGE_CONTAINER" model="SYNCHRONOUS, ASYNCHRONOUS"
                    destination="file://"
                    class="org.apache.james.MessageContainerRepository"/>
            </repositoriesDefinition>
            <publicrepositories help="When an application needs a Repository for
                    its personal use it can just ask for a private Repository which will
                    be available only to caller application. If, on the other side, it 
                    needs to share that repository with other Block the Repository must 
                    be defined public since none of these block has 'the right' to own 
                    Repository configurations. Place here any public Repository definition">

                <repository name="localInbox" type="MESSAGE_CONTAINER" model="SYNCHRONOUS"
                        help="Fill element with path where processed message are
                        stored. This public Repository is shared amongst the 
                        MailServer and POP3Server.
                        (ex. file://c:/archivio/store/james/localinbox/)">
                    file://../mail/localinbox/
                </repository>

                <repository name="MailUsers" type="OBJECT" model="SYNCHRONOUS"
                        help="Fill element with path where users data are stored.
                        (ex. file://c:/archivio/store/james/users/)">
                    file://../mail/users/
                </repository>

            </publicrepositories>
        </block>

        <block class="org.apache.avalon.blocks.serversocket.SocketManager"
               serverName="all"
               implementedInterface="org.apache.avalon.blocks.SocketServer"
               help="Provides an simple interface to catch Socket events">
            <listenerDefinition help="These are default socket listener. An 
                    application can implement an use its own lstener to perform
                    specific task (ex. MD5Listener etc.)" >
                <listener type="DEFAULT" class="org.apache.avalon.blocks.serversocket.ServerSocketAcceptor">
                </listener>
                <listener type="IPFILTERING" class="org.apache.avalon.blocks.serversocket.AutenticatedServerSocketAcceptor">
                    <denied></denied>
                </listener>
            </listenerDefinition>
        </block>
        
    </blocks>
</avalon>
