<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->
<document>

 <properties>
  <title>James 3.0 - Component Summary</title>
 </properties>

<body>

  <section name="The James Server">
  
    <p>James is an open source project intended to produce a robust, flexible, and powerful 
    enterprise class server that provides email and email-related services.  It is also designed to
    be highly customizable, allowing administrators to configure James to process email in a 
    nearly endless variety of fashions.</p>
    
    <p>The standard James distribution deploys inside the Spring dependency injection container.
    In addition to providing a robust server architecture for James, the use of Spring allows James administrators 
    to deploy their own applications inside the container.  These applications can then be accessed during 
    mail processing.</p>
    
    <p>The James server is implemented as a complete collection of servers and related components that, taken together,
    provide an email solution.  These components are described below.</p>
    
    <subsection name="SMTP Protocol">
    
      <p>SMTP (Simple Mail Transport Protocol) is the standard method of sending and delivering 
      email on the internet.  James provides a full-function implementation of the SMTP specification,
      with support for some optional features such as message size limits, SMTP auth, and encrypted 
      client/server communication.</p>
      
      <p>More information on configuring the SMTP service can be found <a href="smtp_configuration.html">here</a>.</p>
    
    </subsection>
    
    <subsection name="POP3 Protocol">
    
      <p>The POP3 protocol allows users to retrieve email messages.  It is the method
      most commonly used by email clients to download and manage email messages.</p>
      
      <p>The James version of the POP3 service is a simple and straightforward implementation that 
      provides full compliance with the specification and maximum compatibility with common
      POP3 clients.  In addition, James can be configured to require SSL/TLS connections for
      POP3 client connecting to the server.</p>
      
      <p>More information on configuring the POP3 service can be found <a href="pop3_configuration.html">here</a>.</p>
    
    </subsection>
    
    <subsection name="IMAP4 Protocol">
    
      <p>The IMAP4 protocol allows users to retrieve email messages.  It is the method
      most commonly used by email clients to download and manage email messages.</p>
      
      <p>The James version of the IMAP4 service is a simple and straightforward implementation that 
      provides full compliance with the specification and maximum compatibility with common
      IMAP4 clients.  In addition, James can be configured to require SSL/TLS connections for
      IMAP4 client connecting to the server.</p>
      
      <p>More information on configuring the IMAP4 service can be found <a href="imap4_configuration.html">here</a>.</p>
    
    </subsection>
    
    <subsection name="FetchMail">
    
      <p>FetchMail, unlike the other James components, is not an implementation of an RFC.  Instead, it's a 
      component that allows the administrator to configure James to retrieve email from a number of POP3 
      servers and deliver them to the local spool.  This is useful for consolidating mail delivered to a
      number of accounts on different machines to a single account.</p>
      
      <p>More information on configuring FetchMail can be found <a href="fetchmail_configuration.html">here</a>.</p>

    </subsection>
    
    <subsection name="SpoolManager, Matchers and Mailets">
    
      <p>James separates the services that deliver mail to James (i.e. SMTP, FetchMail) 
      from the engine that processes mail after it is received by James.  The 
      SpoolManager component is James' mail processing engine.  James' SpoolManager component 
      is a Mailet container.  It is these mailets and matchers that actually carry out mail processing.</p>
      
      <p>More on the structure of the SpoolManager and the Mailet API can be found <a href="spoolmanager.html">here</a>.</p>
    
    </subsection>
    
    <subsection name="Stores">
    
      <p>James uses a number of different stores/repositories to both store message data (email, news messages) and 
      user information.  User stores/repositories contain user information, including user names, authentication 
      information, and aliases.  Mail stores/repositories contain messages that have been delivered locally.  Spool 
      Stores/repositories contain messages that are still being processed.  Aside from what type of data they store, 
      repositories are distinguished by where they store data.  There are three types of storage - File, Database, and DBFile.</p>
    
      <p>More information the stores can be found <a href="stores.html">here</a>.</p>

    </subsection>
    
    <subsection name="RemoteManager">
    
      <p>James provides a simple telnet-based interface for control.  Through this interface you can add 
      and delete users, configure per-user aliases and forward addresses, and shut down the server.</p>
      
      <p>More on the configuring the RemoteManager can be found <a href="remotemanager_configuration.html">here</a>.</p>
  
    </subsection>  
      
  </section>
  
</body>

</document>
