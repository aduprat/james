<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->
<document>

 <properties>
  <title>James 3.0 - Installation</title>
 </properties>

<body>

<section name="Requirements">

  <subsection name="Java Virtual Machine">
  
    <p>James requires a Java Runtime Environment. Java version 1.5 or higher is required to run the 
       James application.</p>
       
    <p>The exact JREs available depend on the platform. In addition, the environment variable JAVA_HOME should be set to
       the JRE home directory before running James.</p>
    
    <p>James 3.0 has been successfully tested on OpenJDK, Sun JDK and IBM JDK</p>
  
  </subsection>
  
  <subsection name="User Privileges">
    
    <p>On Linux/Unix platforms, root access will be required to run James (access to ports 
       below 1024 is generally restricted to the root user).  As SMTP, POP3, and IMAP4 
       need to open server sockets on such ports in standard configurations, 
       James requires root access.</p>
    
    <p>On Windows platforms, you also need to run James as Administrator privilege.</p>
  
  </subsection>
    
  <subsection name="Libc6">
    
    <p>On Linux, to run the startup/shutdown script via the 'james' command, you also need <code>libc6</code> 
        (on Ubuntu for example: <code>sudo apt-get install libc6-i386 libc6-dev-i386</code>).</p>
        
  </subsection>
  
  <subsection name="System Resources">
    
    <p>Obviously James also requires sufficient disk space, processor power, and network bandwidth.  But, 
       other than what's been discussed here, it has no additional special requirements.</p>
    
    <p>James is configured to run with 512 MB RAM available, but may need more or less depending on the load.</p>
  
  </subsection>
  
  </section>
  
  <section name="Details">
  
  <subsection name="Step 1: Download James"> 
  
    <p>Obtain the full James binary (or source) distribution from 
       the <a href="http://james.apache.org/download.cgi">James 
       release mirrors</a>.</p>
      
    <p>If you have downloaded a binary distribution, you do not need to build James. 
      Proceed directly to Step 2.</p>
    
    <p>If you have downloaded a source package, process first to 
       the <a href="dev-build.html">build</a> and come back to Step 2.</p>
  
  </subsection>
  
  <subsection name="Step 2: Deploy James">
  
    <p>Unpack the archive into your James installation directory.</p>
  
  </subsection>
  
  <subsection name="Step 3: Configure James">
  <!-- 
      <div class="ui-widget">
        <div class="ui-state-error ui-corner-all" style="padding: 0 .7em;"> 
          <p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span> 
          <strong>Preliminary step for JMX on Windows: </strong>
          to let windows start with JMX username/password enabled, 
          you need to modify the security settings for the JMX files (./conf/jmx.password and ./conf/jmx.access) 
          like described here:
          <a href="http://download.oracle.com/javase/1.5.0/docs/guide/management/security-windows.html">
          http://download.oracle.com/javase/1.5.0/docs/guide/management/security-windows.html</a>
        </p>
        </div>
      </div>
  -->
    <p>After unpacking the binary, the next step is to adjust the initial configuration.  
       The most configuration files reside in the ./conf directory.</p>
    
    <p>The out of the box configuration makes certain assumptions and has some default 
       values that are unlikely to be appropriate for real-world servers. 
       There are a few issues that should be addressed immediately upon installation:</p>
      <ul>
        <li>RemoteManager Administrator Account - Before the RemoteManager service can be used to add users to this server 
            installation an administrator account must be created.  More information can be found <a href="config-remotemanager.html">here</a>.</li>
        <li>DNS Servers - James needs to have access to a DNS server for domain resolution.  The out of the box 
            configuration assumes that there is a DNS server on localhost.  In general administrators will have to change 
           the configuration to point to a valid DNS server.  This can be done by adjusting the dnsserver configuration 
           block in the config.xml.  More information can be found <a href="config-serverwide.html">here</a>.</li>
        <li>Managed Domain Names/IP Addresses - Out of the box, James only handles mail that is sent to recipients at 
           localhost.  It will attempt to deliver all other email to remote SMTP servers.  To allow James to handle email 
           for your domain or IP address, you simply need to add the appropriate domain name or IP address to the servernames 
           section of the config.xml.  More information can be found <a href="config-serverwide.html">here</a>.</li>
        <li>Postmaster Address - More information can be found <a href="config-serverwide.html">here</a>.</li>
      </ul>
    
    <p>In addition to adjusting these parameters, you may wish to consult the documentation for a discussion of
       common configurations.  A list of such configurations, as well as the steps necessary to configure them, can
       be found <a href="index.html">here</a>.</p>
    
    <p>Read the short and snappy documentation at docs/index.html for a proper
        overview of configuring the system.</p>
  
    <p>M$ users should just run /bin/run.bat. Unix users will find run.sh under the 
      same directory. A JVM must be present and its location specified in the JAVA-HOME 
      environment variable. Set this on windows at the command prompt with something 
      similar to &quot;set JAVA-HOME=\jdk1.3\bin&quot; on *nix with JAVA-HOME=/jdk1.3/</p>
      
  </subsection>
  
  <subsection name="Step 4: Start James">
  
    <p>Go to the bin subdirectory of the installation directory and run "./james start".</p>
      
    <p>Running [run* --help] will provide a simple command line help. </p>
    
    <p>Most UNIX systems require superuser privileges to open sockets below 1024,
        which includes the IANA-standard SMTP (on port 25) and POP3 (on port 110).
        These default ports can be changed in the conf.xml file. (Obviously, you
        would then need to reconfigure your clients. This may not be an option if
        you want to receive mail from external mailservers.)</p>
      
    <p>The Avalon framework will unpack the necessary configuration files you will 
       need to start the server.  Wait until it is running, stop it again (ctrl-c), and 
       edit the configuration (thereafter *nix users can run the server in the background 
       using ./run.sh &amp;). For basic use, you only need to set two items in the 
       JAMES.conf.xml file: a root password for the remote administration facility 
       and the IP address of a DNS server. Once you have edited the configuration files, 
       press 'Enter' on the terminal where Avalon is waiting. </p>
  
    <p>Once you have edited the configuration file you will need to restart James so that the changes take 
       effect.  When James starts, a list of the James services and the ports on which they are listening should 
       be displayed on the console. Additional information about the system configuration is printed in the James log files 
       upon startup.</p>
       
  </subsection>
    
  <subsection name="Step 5: Create Domains and Users">
  
    <p>Finally, after configuration is complete, it will be necessary to create user accounts before the James server 
       will be fully operational.  Instructions on creating user accounts can be found 
       <a href="manage-users.html">here</a>.</p>
    
    <p>Once started you'll see a message saying Avalon is running. This means that
       Avalon has loaded JAMES and every other needed Block (see /logs/avalon.log)
       and is now waiting for a socket request.</p>
  
    <p>Since at the beginning James is empty, it will not have any local users
       registered.</p>
       
    <p>To register a local user open a telnet session with localhost on port 4555,
       log in as root ("root[enter]  &lt;password-you-set-in-conf.xml&gt;[enter]") and
       type "help" for a list of available commands in the "JAMES remote
       administrator tool". It is really a basic set but should allow you to test
       installation.</p>
        
    <p>Once you have some local users registered, try sending mail to one of them
        @localhost with SMTP (port 25) (assuming you have not changed the default
        server names in the conf.xml file). You'll see the mail appear under
        ../var/mail/localinbox/[user].
        Try now to retrieve that mail using POP3 (port 110).
        Trace out JAMES actions in /logs/*info.log.
        Actions that will be taken by JAMES on incoming mail are configured in
        the mailet pipe line (/conf/JAMES.conf.xml). Look at it if you want to
        understand what's happening.</p>
  
  </subsection>
  
  <subsection name="Step 6: Test James">

<source>
$ telnet 127.0.0.1 25
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 172.16.1.131 SMTP Server (JAMES SMTP Server 3.0-M2) ready Sat, 6 Nov 2010 17:31:33 +0100 (CET)
ehlo test
250-172.16.1.131 Hello test (aoscommunity.com [127.0.0.1])
250-PIPELINING
250-ENHANCEDSTATUSCODES
250 8BITMIME
mail from:&lt;YOUR_NAME@YOUR_DOMAIN&gt;
250 2.1.0 Sender &lt;YOUR_NAME@YOUR_DOMAIN&gt; OK
rcpt to:&lt;YOUR_NAME@YOUR_DOMAIN>
250 2.1.5 Recipient &lt;YOUR_NAME@YOUR_DOMAIN&gt; OK
data
354 Ok Send data ending with &lt;CRLF&gt;.&lt;CRLF&gt;
subject: test

this is a test
.
250 2.6.0 Message received
quit
Connection closed by foreign host.
</source>
    
  </subsection>

</section>

</body>

</document>
