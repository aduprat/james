<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->

<project default="help" basedir="." name="smoke-test" 
    xmlns:mpt="antlib:org.apache.james.mpt.ant"> 

	<description>
	Contains smoke test macros. These allow basic sanity testing of the packaged distribution
	</description>
	
	<target name='help'>
		<echo>This is a library containing macros required for smoke tests.</echo>
	</target>
 
    <macrodef name='Imap'>
        <attribute name='script' default='imap'/>
        <sequential>
            <mpt:mpt port='${org.apache.james.smoke.port.IMAP}' script='../build-tools/@{script}.mpt'/>   
        </sequential>   
    </macrodef>   
    
    <macrodef name='Smtp'>
        <attribute name='script' default='smtp'/>
        <sequential>
            <mpt:mpt port='${org.apache.james.smoke.port.SMTP}' script='../build-tools/@{script}.mpt'/>   
        </sequential>   
    </macrodef>
    
    <macrodef name='TestDelivery'>   
        <attribute name='smtp' default='delivery-smtp'/>
        <attribute name='pop3' default='pop3-after-smtp'/>   
        <sequential>
            <TestProtocol port='${org.apache.james.smoke.port.SMTP}' name='@{smtp}'/>
            <echo>Allow spool to delivery message...</echo>
            <sleep seconds="10"/>
            <mpt:mpt port='${org.apache.james.smoke.port.POP3}' script='../build-tools/@{pop3}.mpt'/>
        </sequential>   
    </macrodef> 
    
    <macrodef name='TestProtocol'>   
        <attribute name='port'/>
        <!-- Use simple convention that script is named from protocol -->   
        <attribute name='name'/>
        <sequential>
            <mpt:mpt port='@{port}' script='../build-tools/@{name}.mpt'>
                <addUser port='${org.apache.james.smoke.port.RemoteManager}' user='user' passwd='passwd'>S: JAMES Remote Administration Tool 3.0-M1
S: Please enter your login and password
S: Login id:
C: root
S: Password:
C: root
S: Welcome root. HELP for a list of commands
C: deluser user
S: User user .*
C: deluser john.smith
S: User john.smith .*
C: adduser user passwd
S: User user a.*
C: adduser john.smith passwd
S: User john.smith a.*
C: removemapping support@example.org john.smith@localhost
S: .*
C: addmapping support@example.org john.smith@localhost
S: Adding mapping successful: true
</addUser>
            </mpt:mpt>               
        </sequential>   
    </macrodef>   
    
    <macrodef name='InitMPT'>
        <sequential>
            <taskdef 
                uri="antlib:org.apache.james.mpt.ant" 
                resource="org/apache/james/mpt/ant/antlib.xml">
                <classpath>
                    <pathelement location="${lib.dir}/${mpt.jar}" />
                    <pathelement location='${lib.dir}/${mpt-antlib.jar}' />
                </classpath>
            </taskdef>     
        </sequential>   
    </macrodef>   
    
    <macrodef name='RunSmokeTests'>
        <sequential>   
            <InitMPT/>
            
            <echo>Giving server time to complete boot...</echo>   
            <sleep seconds="5"/>
            
            <TestProtocol port='${org.apache.james.smoke.port.POP3}' name='pop3'/>    
            <TestProtocol port='${org.apache.james.smoke.port.IMAP}' name='imap'/>
            <TestProtocol port='${org.apache.james.smoke.port.SMTP}' name='smtp'/>
            <TestProtocol port='${org.apache.james.smoke.port.NNTP}' name='nntp'/> 
            
            <TestDelivery/>   
        </sequential>   
    </macrodef>   
        
    <macrodef name='Smoke'>
        <attribute name='build-dir'/> 
        <attribute name='zip'/>    
        <attribute name='package'/>
        <attribute name='app-path'/>
        <attribute name='conf-path'/>
        <attribute name='conf-file-name'/> 
        <attribute name='cmd'/>
        <attribute name='log'/>   
        <sequential>
    
            <VerifySmokePrerequisites zip='@{zip}'/>
        
            <property name='smoke.dir' location='@{build-dir}/smoke'/>
            <UnpackDistribution zip='@{zip}' dir='${smoke.dir}'/>
            
            <property name='smoke.james.dir' location='${smoke.dir}/@{package}'/>               
            <ConfigureJames 
            	dir='${smoke.james.dir}' 
            	app-path='@{app-path}' 
            	conf-path='@{conf-path}'
            	conf-file-name='@{conf-file-name}'/>   
            <BootJames dir='${smoke.james.dir}' cmd='@{cmd}' log='@{log}'/>  
            <RunSmokeTests/>   
            <StopJames dir='${smoke.james.dir}' cmd='@{cmd}'/>       
    
        </sequential>   
    </macrodef> 
    
    <macrodef name='VUTSmoke'>
        <attribute name='build-dir'/> 
        <attribute name='zip'/>    
        <attribute name='package'/>
        <attribute name='app-path'/>
        <attribute name='conf-path'/>
        <attribute name='conf-file-name'/> 
        <attribute name='cmd'/>
        <attribute name='log'/>   
        <sequential>
    
            <VerifySmokePrerequisites zip='@{zip}'/>
        
            <property name='smoke.sieve.dir' location='@{build-dir}/vut-smoke'/>
            <UnpackDistribution zip='@{zip}' dir='${smoke.sieve.dir}'/>
            
            <property name='smoke.sieve.james.dir' location='${smoke.sieve.dir}/@{package}'/>               
            <ConfigureJames 
                dir='${smoke.sieve.james.dir}' 
                app-path='@{app-path}' 
                conf-path='@{conf-path}'
                conf-file-name='@{conf-file-name}'
                style='vut'/>   

            <BootJames dir='${smoke.sieve.james.dir}' cmd='@{cmd}' log='@{log}'/>  
            <InitMPT/>   
            <TestDelivery pop3="vut-pop3" smtp="vut-smtp"/>
            <StopJames dir='${smoke.sieve.james.dir}' cmd='@{cmd}'/>       
        </sequential>   
    </macrodef>    
    
    <macrodef name='SieveSmoke'>
        <attribute name='build-dir'/> 
        <attribute name='zip'/>    
        <attribute name='package'/>
        <attribute name='app-path'/>
        <attribute name='conf-path'/>
        <attribute name='conf-file-name'/> 
        <attribute name='cmd'/>
        <attribute name='log'/>   
        <sequential>
    
            <VerifySmokePrerequisites zip='@{zip}'/>
        
            <property name='smoke.sieve.dir' location='@{build-dir}/sieve-smoke'/>
            <UnpackDistribution zip='@{zip}' dir='${smoke.sieve.dir}'/>
            
            <property name='smoke.sieve.james.dir' location='${smoke.sieve.dir}/@{package}'/>               
            <ConfigureJames 
                dir='${smoke.sieve.james.dir}' 
                app-path='@{app-path}' 
                conf-path='@{conf-path}'
                conf-file-name='@{conf-file-name}'
                style='sieve'/>  
               
            <BootJames dir='${smoke.sieve.james.dir}' cmd='@{cmd}' log='@{log}'/>  
            
            <mkdir dir="${smoke.sieve.james.dir}/apps/james/var/sieve/"/>
            <copy todir="${smoke.sieve.james.dir}/apps/james/var/sieve/" file="../build-tools/john.smith.sieve"/>
               
            <InitMPT/>   
            <TestDelivery pop3="pop3" smtp="smtp"/>
            <Imap script='imap-sieve'/> 
            <Imap script='imap-prep-john-sieve'/> 
            <Smtp script='sieve-smtp'/>    
            <Imap script='imap-post-john-sieve'/>    
            <StopJames dir='${smoke.sieve.james.dir}' cmd='@{cmd}'/>       
        </sequential>   
    </macrodef>    
    
    <macrodef name="ControlJames">
        <attribute name='action'/>
        <attribute name='dir'/>   
        <attribute name='cmd'/>
        <sequential>
            <chmod 
                perm="ugo+rx" 
                file="@{dir}/bin/@{cmd}.sh"/>   
            <exec 
               dir="@{dir}/bin" 
               executable="@{dir}/bin/@{cmd}.sh" 
               failonerror='true'>
                <arg line="@{action}"/>
            </exec> 
        </sequential>   
    </macrodef>  
 
    <macrodef name="StartJames">
        <attribute name='dir'/> 
        <attribute name='cmd'/>  
        <sequential>
            <ControlJames dir='@{dir}' action='start' cmd='@{cmd}'/>
        </sequential>   
    </macrodef>  
 
    <macrodef name="StopJames">
        <attribute name='dir'/>
        <attribute name='cmd'/>    
        <sequential>
            <ControlJames dir='@{dir}' action='stop' cmd='@{cmd}'/>
        </sequential>   
    </macrodef>    
    
    <macrodef name='BootJames'>
        <attribute name='dir'/> 
        <attribute name='cmd'/>   
        <attribute name='log'/>     
        <sequential>
            <StopJames dir='@{dir}' cmd='@{cmd}'/>   
            <StartJames dir='@{dir}' cmd='@{cmd}'/>
            <echo>Waiting for James to boot...</echo>   
            <waitfor maxwait='60' maxwaitunit='second' timeoutproperty='smoke.boot.failed'>
                <and>   
                    <socket server='localhost' port='${org.apache.james.smoke.port.SMTP}'/>   
                    <socket server='localhost' port='${org.apache.james.smoke.port.POP3}'/>
                    <socket server='localhost' port='${org.apache.james.smoke.port.IMAP}'/>
                    <socket server='localhost' port='${org.apache.james.smoke.port.NNTP}'/>   
                    <socket server='localhost' port='${org.apache.james.smoke.port.RemoteManager}'/>   
                </and>   
            </waitfor>   
            <fail if='smoke.boot.failed'>
Failed to boot James server. See @{dir}/@{log} for details.   
            </fail>   
                <echo>James booted.</echo>      
        </sequential>   
    </macrodef>   
 
    <macrodef name='ConfigureJames'>
    	<attribute name='dir'/>
        <attribute name='app-path'/>
        <attribute name='conf-path'/>
        <attribute name='conf-file-name'/>
        <attribute name='style' default="smoke"/>   
        <sequential>
            <unzip dest="@{dir}/@{app-path}/james">
            	<fileset dir='@{dir}/@{app-path}'>
            		<include name='james.sar'/>
            	</fileset>
            </unzip>
            <xslt 
            	style="../build-tools/@{style}.xsl" 
                in='@{dir}/@{conf-path}/@{conf-file-name}' 
                out='@{dir}/@{conf-path}/config-smoke.xml'></xslt>   
            <move   
                file='@{dir}/@{conf-path}/config-smoke.xml' 
                tofile="@{dir}/@{conf-path}/@{conf-file-name}"/>
        </sequential>   
    </macrodef>   

    <macrodef name='VerifySmokePrerequisites'>
    	<attribute name='zip'/>
        <sequential>
            <condition property='is.windows'>
                <os family='windows'/>   
            </condition>   
            <fail if='is.windows'>
Smoke is not supported on Windows ATM.
To support smoke on Windows, a reliable method of shutting down
James from the command line is required on Windows.   
            </fail>   
            <available file='@{zip}' property="is.packaged"/>
            <fail unless='is.packaged'>
@{zip} not found. Try 'ant dist'.
            </fail>        
            <property name='org.apache.james.smoke.port.IMAP' value='10043'/>
            <property name='org.apache.james.smoke.port.SMTP' value='10025'/>
            <property name='org.apache.james.smoke.port.POP3' value='10110'/>
            <property name='org.apache.james.smoke.port.NNTP' value='10119'/>   
            <property name='org.apache.james.smoke.port.RemoteManager' value='10445'/>
        </sequential>
    </macrodef>   
 
    <macrodef name='UnpackDistribution'>
        <attribute name='dir'/>
        <attribute name='zip'/>   
        <sequential>
            <delete dir='@{dir}'/>       
            <mkdir dir='@{dir}'/>   
            <unzip src='@{zip}' dest='@{dir}'/>    
        </sequential>
    </macrodef>    
</project>