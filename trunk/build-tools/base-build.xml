<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->

<project name='james-base' default='usage'>
     <description>
Defines common macros and properties used by builds.
     </description>
    
    <property name='filename.property.local' value='.ant.properties'/>   
    <property name='filename.property.defaults' value='default.properties'/>
    <property name='file.property.defaults' value='../${filename.property.defaults}'/>
    <property name='filename.property.includes' value='include.properties'/>
    <property name='file.property.includes' value='../${filename.property.includes}'/>   
    
    <!--
    Give user a chance to override without editing this file
    (and without typing -D each time he compiles it)
    -->   
    <property file='${filename.property.local}'/>      
    <property file='../${filename.property.local}'/>
    <property file='${user.home}/${filename.property.local}'/>
    <property file='module.properties'/>   
    <property file='${file.property.includes}'/>
    <property file='${file.property.defaults}'/>
    
 <!--
Macro Definitions
 -->
    <macrodef name='CheckEnvironment'>
        <sequential>
            <condition property='file.property.defaults.exists'>
                <available file='${file.property.defaults}'/>   
            </condition>   
            <fail unless='file.property.defaults.exists'>Error: ${file.property.defaults} missing
JAMES stores default build property value in ${filename.property.defaults}. This file must exist.</fail>   
            <available property='version.ant.1_7_plus'
                       classname='org.apache.tools.ant.types.ResourceCollection'/>   
            <fail unless='version.ant.1_7_plus'>Error: Ant 1.7 or higher required
JAMES requires Ant 1.7 or higher. Please install a more modern version of Ant.
            </fail>   
            <echo>Environment looks okay</echo>
        </sequential>   
    </macrodef>   
       
    <macrodef name="CleanBuildDirectories">
        <sequential>
            <echo>Cleaning build directories...</echo>   
            <delete dir='${dir.build}'/>   
            <delete dir='${dir.build.src}'/>   
            <delete dir='${dir.build.bin}'/>
            <delete dir='${dir.build.test}'/>   
        </sequential>   
    </macrodef>   
    
    <macrodef name="Clean">
        <sequential>
            <CleanBuildDirectories/>   
        </sequential>   
    </macrodef>   
    
    <macrodef name="Compile">
        <attribute name='src'/>
        <attribute name='resources'/>   
        <attribute name='bin'/>
        <attribute name='classpath-refid'/>   
        <attribute name='debug' default='${debug}'/>
        <attribute name='optimize' default='${optimize}'/>
        <attribute name='deprecation' default='${deprecation}'/>
        <attribute name='jdk-source' default='${jdk.source}'/>
        <attribute name='jdk-target' default='${jdk.target}'/>      
        <sequential>
            <echo>Compiling @{src}</echo>
            <mkdir dir='@{bin}'/>
            <mkdir dir='@{src}'/>
            <mkdir dir='@{resources}'/>   
            <javac 
                destdir='@{bin}' 
                debug='@{debug}' 
                optimize='@{optimize}' 
                deprecation='@{deprecation}' 
                target='@{jdk-target}' 
                source='@{jdk-source}'>
                <classpath refid='@{classpath-refid}'/>
                <src path='@{src}'/>
                <!-- Not needed anymore (handled by core-library/build.xml)
                <exclude name='${constants.file}'/>
                -->
            </javac>
            <copy todir='@{bin}'>
                <fileset dir='@{src}'>
                    <include name='**/*.properties'/>
                    <include name='**/*.xinfo'/>
                    <include name='**/*.xml'/>
                    <include name='**/*.mxinfo'/>
                </fileset>
                <fileset dir='@{resources}'>
                    <include name='**/*'/>
                </fileset>   
            </copy>
        </sequential>   
    </macrodef>   
    
    <macrodef name="CompileMainSource">
        <attribute name='classpath-refid' default='classpath.main'/>
        <attribute name='debug' default='${debug}'/>
        <attribute name='optimize' default='${optimize}'/>
        <attribute name='deprecation' default='${deprecation}'/>
        <attribute name='jdk-source' default='${jdk.source}'/>
        <attribute name='jdk-target' default='${jdk.target}'/>   
        <attribute name='src' default='${dir.src.java}'/>
        <sequential>
            <Compile 
                src='@{src}'   
                bin='${dir.build.bin}'
                resources="${dir.src.resources}"   
                classpath-refid="@{classpath-refid}"   
                debug='@{debug}'   
                optimize='@{optimize}'   
                deprecation='@{deprecation}'   
                jdk-source='@{jdk-source}' 
                jdk-target='@{jdk-target}'/>   
            <copy todir='${dir.build.bin}/META-INF'>
                <fileset dir='${basedir}'>
                    <include name='${filename.license}'/>   
                    <include name='${filename.notice}'/>   
                </fileset>
            </copy>   
        </sequential>   
    </macrodef>   
 
    <macrodef name="SetBaseClasspaths">
        <sequential>
            <path id='classpath.base'>  
                <fileset dir="${lib.dir}">
                    <include name="${avalon-framework.jar}"/>
                    <include name="${avalon-framework-impl.jar}"/>
                    <include name="${dns.jar}"/>
                    <include name="${commons-collections.jar}"/>
                    <include name="${commons-dbcp.jar}"/>
                    <include name="${commons-pool.jar}"/>
                    <include name="${jakarta-oro.jar}"/>
                    <include name="${excalibur-pool-api.jar}"/>
                    <include name="${excalibur-pool-impl.jar}"/>
                    <include name="${excalibur-thread-api.jar}"/>
                    <include name="${excalibur-datasource.jar}"/>
                    <include name="${cornerstone-threads-api.jar}"/>
                    <include name="${cornerstone-connection-api.jar}"/>
                    <include name="${cornerstone-connection-impl.jar}"/>
                    <include name="${cornerstone-store-api.jar}"/>
                    <include name="${cornerstone-scheduler-api.jar}"/>
                    <include name="${cornerstone-sockets-api.jar}"/>
                    <include name="${cornerstone-datasources-api.jar}"/>
                    <include name="${javax-mail.jar}"/>
                    <include name="${javax-activation.jar}"/>
                    <include name="${bcmail.jar}"/>
                    <include name="${bcmail-workaround.jar}"/>
                    <include name="${javax.management}"/>
                    <include name="${jspf.jar}"/>
                    <include name="${mstor.jar}"/>
                    <include name="${commons-logging.jar}"/>
                    <include name="${jdom.jar}"/>
                    <include name="${xstream.jar}"/>
                    <include name="${torque.jar}"/>
                    <include name="${village.jar}"/>
                    <include name="${commons-lang.jar}"/>
                    <include name="${commons-configuration.jar}"/>
                    <include name="${jsieve.jar}"/>
					<include name="${mailet.jar}"/>
                    <include name="${commons-digester.jar}"/>           
                </fileset>   
            </path>   
            <path id='classpath.base.test'>  
                <path refid='classpath.base'/>
                <fileset dir="${lib.dir}">    
                    <include name="${junit.jar}"/>
                    <include name="${commons-net.jar}"/>
                    <include name="${jmock.jar}"/>
                </fileset>   
            </path>   
    
            <path 
                id='classpath.dependencies.api'
                description="Convenient way to import all APIs">
                <!-- TODO Add content when APIs are broken out -->   
                <fileset dir="${lib.dir}/${path.lib.james}">
                    <include name="${jars-prefix}*-api-${version}.jar" />
                    <include name="${jars-prefix}mailet-library-${version}.jar" />
                </fileset>
            </path>
            <path 
                id='classpath.dependencies.libraries'
                description="Convenient way to import all libraries and APIs">
                <!-- TODO Add content when libraries are broken out -->   
                <path refid='classpath.dependencies.api'/>
                <fileset dir="${lib.dir}/${path.lib.james}">
                    <include name="${jars-prefix}*-library-${version}.jar" />
                </fileset>
            </path> 
            <path 
                id='classpath.dependencies.functions'
                description="Convenient way to import all functions, libraries and APIs">
                <!-- TODO Add content when functions are broken out -->   
                <path refid='classpath.dependencies.libraries'/>   
                <fileset dir="${lib.dir}/${path.lib.james}">
                    <include name="${jars-prefix}*-function-${version}.jar" />
                </fileset>
            </path>   
        </sequential>   
    </macrodef>   
 
    <macrodef name="CompileTests">
        <attribute name='classpath-refid' default='classpath.test'/>
        <attribute name='debug' default='${debug}'/>
        <attribute name='optimize' default='${optimize}'/>
        <attribute name='deprecation' default='${deprecation}'/>
        <attribute name='jdk-source' default='${jdk.source}'/>
        <attribute name='jdk-target' default='${jdk.target}'/>   
        <sequential>
            <Compile 
                src='${dir.src.test}'   
                bin='${dir.build.test}'
                resources="${dir.src.test-resources}"   
                classpath-refid="@{classpath-refid}"   
                debug='@{debug}'   
                optimize='@{optimize}'   
                deprecation='@{deprecation}'   
                jdk-source='@{jdk-source}' 
                jdk-target='@{jdk-target}'/>   
        </sequential>   
    </macrodef>     
    
    <macrodef name='RunTests'>
        <attribute name='classpath-refid' default='classpath.test.runtime'/>   
        <attribute name='bin' default='${dir.build.test}'/>
        <attribute name='src' default='${dir.src.test}'/>   
        <attribute name='reports' default='${dir.build.test-reports}'/>
        <sequential>   
            <condition
               property='RunTests.message' 
               value='Running single unit test named ${test}'>
                <isset property='test'/>   
            </condition>   
            <property name='RunTests.message' value='Running all unit tests in @{bin}'/>
            <echo>${RunTests.message}</echo>
            <delete dir='@{reports}'/>
            <mkdir dir='@{reports}'/>
            <mkdir dir='@{bin}'/>
            <junit 
                    printsummary="yes" 
                    haltonfailure="yes"  
                    dir='${basedir}'>
                 <classpath refid="@{classpath-refid}"/>
                 <classpath>
                   <pathelement location="@{bin}"/>
                 </classpath>
             
                 <formatter type="plain"/>
             
                 <batchtest 
                    fork="yes" 
                    todir="@{reports}">
                       <fileset dir="@{src}">
                         <include name="**/*Test.java" unless="test"/>
                         <include name="**/${test}.java" if='test'/>
                         <exclude name="**/AllTests.java"/>
                         <exclude name="**/Abstract*.java"/>
                       </fileset>
                 </batchtest>
             </junit>   
        </sequential>   
    </macrodef>   
    
    <macrodef name="CreateJar">
        <attribute name='name'/>
        <attribute name='bin'/>  
        <attribute name='lib'/>
        <attribute name='prefix' default='${jars-prefix}'/>
        <attribute name='version' default='${version}'/>   
        <attribute name='vendor.impl' default='${vendor.impl}'/> 
        <attribute name='vendor.spec' default='${vendor.spec}'/>   
        <attribute name='vendor.id' default='${vendor.id}'/>   
        <attribute name='vendor.impl.title' default='${vendor.impl.title}'/>   
        <sequential>
            <mkdir dir='@{lib}'/>
            <mkdir dir='@{bin}'/>   
            <jar 
                jarfile="@{lib}/@{prefix}@{name}-@{version}.jar" 
                basedir="@{bin}">
                <manifest>
                    <attribute name='Built-By' value='${user.name}'/>
                    <attribute name='Specification-Title' value='Apache JAMES @{name}'/>
                    <attribute name='Specification-Version' value='@{version}'/>
                    <attribute name='Specification-Vendor' value='@{vendor.spec}'/>
                    <attribute name='Implementation-Title' value='@{vendor.impl.title}'/>
                    <attribute name='Implementation-Version' value='@{version}'/>
                    <attribute name='Implementation-Vendor' value='@{vendor.impl}'/>
                    <attribute name="Implementation-Vendor-Id" value="@{vendor.id}"/>   
            </manifest>    
            </jar>   
        </sequential>   
    </macrodef>
    
 <!--
 Targets
 -->   
    <target 
        name='usage'>
        <echo>Execute 'ant -projecthelp' to list recommended targets</echo>
        <echo>Execute 'ant -help' to learn how to run these targets</echo>
    </target>

    <target name='help' depends='usage'/>
</project>
