<?xml version="1.0"?>

<!-- ===========================================================================

 James build file

Authors:
 Federico Barbieri <scoobie@systemy.it>

Todo:
 - write the target rule that reacts on class presence.

Legal:
  Copyright (c) 1999 The Apache Software Foundation. All Rights Reserved.

================================================================================


                          Needed package to run JAMES
                          ===========================

JAMES is a mail server running on top of the Avalon framework.

To compile and run it you need the org.apache.avalon.blocks package and its needed packages.
    JAMES uses from Avalon Blocks a Logger, a ThreadManager, a TimeServer, a SocketServer and a Store.
    A default implementation of these Blocks are distributed in the Avalon jar file.
After that you'll need activation.jar and mail.jar from Sun.

All theese package are in current distribution.

============================================================================ -->

<project default="package" basedir=".">
  <target name="init">
	<property name="name" value="JAMES"/>
	<property name="version" value="1.2.1rc2"/>
	<property name="year" value="1999-2000"/>

	<property name="build.compiler" value="classic"/>
	<property name="debug" value="off"/>
	<property name="optimize" value="on"/>
	<property name="deprecation" value="off"/>
	<property name="classpath" value="./lib/AvalonAware.jar;./lib/activation.jar;./lib/mail_1_1_3.jar;./lib/xerces.jar;./lib/dnsjava.jar;./lib/town.jar"/>

	<property name="src.dir" value="./src"/>
	<property name="dtd.dir" value="./dtd"/>
	<property name="docs.dir" value="./docs"/>
	<property name="sheets.dir" value="./stylesheets"/>
	<property name="images.dir" value="./resources"/>
	<property name="samples.dir" value="./samples"/>
	<property name="packages" value="org.apache.*"/>

	<property name="sbk.docs" value="./build/sbkdocs"/>
	<property name="style" value="../xml-site/style/"/>
	<property name="doc.generator" value="org.apache.stylebook.StyleBook"/>

	<property name="constants.file" value="org/apache/james/Constants.java"/>

	<property name="build.dir" value="./build"/>
	<property name="build.src" value="./build/src"/>
	<property name="build.dest" value="./build/classes"/>
    <property name="build.docs" value="./build/docs"/>
    <property name="build.mailetdocs" value="./build/mailetdocs"/>
	<property name="build.javadocs" value="./build/javadocs"/>

	<property name="dist.dir" value="./dist"/>

	<property name="site.dir" value="../xml-site/sources/james"/>
	<property name="site.docs" value="../xml-site/targets/james"/>
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="JAMES Build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   package  --> generates the mailet.jar and James.jar file (default)"/>
    <echo message="   compile  --> compiles the source code"/>
    <echo message="   dist     --> generates the JAMES distribution"/>
    <echo message="   clean    --> cleans up the directory"/>
    <echo message="   javadoc  --> creates the Javadoc"/>
    <echo message="   javadocmailet --> creates the Javadoc for the mailet API"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Copies the source code                                              -->
  <!-- =================================================================== -->
  <target name="prepare-src" depends="prepare">
    <!-- create directories -->
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>

    <!-- copy src files -->
    <copydir src="${src.dir}" dest="${build.src}" excludes="**/CVS/**,*.xml"/>

    <!-- substitute tokens as needed -->
    <replace file="${build.src}/${constants.file}" token="@@version@@" value="${version}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare-src">
    <javac srcdir="${build.src}" destdir="${build.dest}" classpath="${classpath}"
           debug="${debug}"
           deprecation="on"/>
    <copyfile src="${src.dir}/org/apache/james/${name}.conf.xml"
              dest="${build.dest}/conf/${name}.conf.xml"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the class package                                           -->
  <!-- =================================================================== -->
  <target name="package" depends="compile">
    <jar jarfile="${build.dir}/${name}.jar" basedir="${build.dest}" manifest="${build.src}/Manifest.mf" includes="org/**,conf/**" excludes="org/apache/mailet/**"/>
    <jar jarfile="${build.dir}/mailet.jar" basedir="${build.dest}" manifest="${build.src}/Manifest.mf" includes="org/apache/mailet/**"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the distribution                                            -->
  <!-- =================================================================== -->
<!--  <target name="dist" depends="package, docs, javadocs"> -->
  <target name="dist" depends="package">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/bin"/>
    <mkdir dir="${dist.dir}/bin/blocks"/>
    <mkdir dir="${dist.dir}/src"/>
    <mkdir dir="${dist.dir}/conf"/>
    <mkdir dir="${dist.dir}/docs"/>

    <copydir src="${build.src}" dest="${dist.dir}/src" excludes="james.conf.xml"/>
    <copydir src="./docs/" dest="${dist.dir}/docs"/>

    <copyfile src="${build.dir}/${name}.jar" dest="${dist.dir}/bin/blocks/${name}.jar"/>

    <copyfile src="./lib/Avalon.jar" dest="${dist.dir}/bin/blocks/Avalon.jar"/>
    <copyfile src="./lib/AvalonAware.jar" dest="${dist.dir}/lib/AvalonAware.jar"/>
    <copyfile src="./lib/Loader.jar" dest="${dist.dir}/bin/Loader.jar"/>
    <copyfile src="./lib/activation.jar" dest="${dist.dir}/lib/activation.jar"/>
    <copyfile src="./lib/mail_1_1_3.jar" dest="${dist.dir}/lib/mail_1_1_3.jar"/>
    <copyfile src="./lib/xerces.jar" dest="${dist.dir}/lib/xerces.jar"/>
    <copyfile src="./lib/dnsjava.jar" dest="${dist.dir}/lib/dnsjava.jar"/>
    <copyfile src="./lib/town.jar" dest="${dist.dir}/lib/town.jar"/>
    <copyfile src="${build.dir}/mailet.jar" dest="${dist.dir}/lib/mailet.jar"/>

    <copyfile src="./res/run.bat" dest="${dist.dir}/bin/run.bat"/>
    <copyfile src="./res/run.sh" dest="${dist.dir}/bin/run.sh"/>
    <copyfile src="./res/avalonTestKeys" dest="${dist.dir}/conf/avalonTestKeys"/>
    <chmod dir="${dist.dir}" perm="go-rwx" />
    <chmod file="${dist.dir}/bin/run.sh" perm="u+x"/>
    <fixcrlf srcdir="${dist.dir}" cr="add" includes="**/*.bat" />
    <fixcrlf srcdir="${dist.dir}" cr="remove" includes="**/*.sh" />

    <copyfile src="./res/maildatabase-odbc" dest="${dist.dir}/var/maildatabase-odbc"/>
    <copyfile src="./res/maildatabase-sqlserver" dest="${dist.dir}/var/maildatabase-sqlserver"/>
    <copyfile src="./res/maildatabase-mysql" dest="${dist.dir}/var/maildatabase-mysql"/>

    <copyfile src="README" dest="${dist.dir}/README"/>
    <replace file="${dist.dir}/README" token="@@version@@" value="${version}"/>
    <copyfile src="LICENSE" dest="${dist.dir}/LICENSE"/>
    <copyfile src="build.xml" dest="${dist.dir}/build.xml"/>

    <zip zipfile="${name}-${version}.zip" basedir="${dist.dir}" includes="**"/>
    <tar tarfile="${name}-${version}.tar" basedir="${dist.dir}" includes="**"/>
    <gzip zipfile="${name}-${version}.tar.gz" src="${name}-${version}.tar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <deltree dir="${build.dir}"/>
    <deltree dir="${dist.dir}"/>
    <deltree dir="${build.docs}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Generates the javadoc                                               -->
  <!-- =================================================================== -->
  <target name="javadoc" depends="prepare-src">
    <mkdir dir="${build.docs}"/>
    <javadoc sourcepath="${build.src}"
        destdir="${build.docs}"
        packagenames="org.apache.avalon.blocks.*,org.apache.james.*,org.apache.james.pop3server.*,org.apache.james.remotemanager.*,org.apache.james.smtpserver.*,org.apache.james.transport.*,org.apache.james.transport.match.*,org.apache.james.transport.mailets.*,org.apache.james.usermanager.*,org.apache.mail.*,org.apache.mail.mailets.*"
        classpath="${classpath}"
	use="true"
        />
  </target>

  <!-- =================================================================== -->
  <!-- Generates the javadoc for the mailet API                            -->
  <!-- =================================================================== -->
  <target name="javadocmailet" depends="prepare-src">
    <mkdir dir="${build.mailetdocs}"/>
    <javadoc sourcepath="${build.src}"
        destdir="${build.mailetdocs}"
        packagenames="org.apache.mailet.*"
        classpath="${classpath}"
        />
  </target>
</project>


<!-- End of file -->