<?xml version="1.0"?>

<!-- ==========================================================================

 James build file

Authors:
 Federico Barbieri <scoobie@systemy.it>

Todo:
 - write the target rule that reacts on class presence.

Legal:
  Copyright (c) 1999 The Apache Software Foundation. All Rights Reserved.

===============================================================================

                          Needed packages to run JAMES
                          ============================

JAMES is a mail server running on top of the Avalon. Avalon is a component-
based server framework. Components are organized into blocks, and one or more
 blocks are packaged in block archive files (*.bar). James is a single block in
 its own archive.

To compile and run James you need the avalon-loader.jar and avalon-engine.jar
 as well as the JAMES.bar. The default implementation of JAMES also uses the
 blocks from avalon-core-blocks.bar.

After that you'll need activation.jar and mail.jar from Sun. For optional TLS
 support, you will need the JSSE jars from Sun.

All these package are in current distribution.

=========================================================================== -->

<project default="block-archive" basedir=".">
  <target name="init">
	<property name="name" value="james"/>
	<property name="version" value="1.2a1"/>
	<property name="year" value="1999-2000"/>

	<property name="build.compiler" value="classic"/>
	<property name="debug" value="off"/>
	<property name="optimize" value="on"/>
	<property name="deprecation" value="off"/>
	<property name="classpath" value="./lib/avalonapi.jar;./lib/activation.jar;./lib/mail_1_2.jar;./lib/xerces.jar;./lib/dnsjava.jar;./lib/town.jar"/>

	<property name="src.dir" value="./src"/>
	<property name="dtd.dir" value="./dtd"/>
	<property name="docs.dir" value="./docs"/>
	<property name="sheets.dir" value="./stylesheets"/>
	<property name="images.dir" value="./resources"/>
	<property name="samples.dir" value="./samples"/>
	<property name="packages" value="org.apache.*"/>

	<property name="sbk.docs" value="./build/sbkdocs"/>
	<property name="style" value="../xml-site/style/"/>
	<property name="doc.generator" value="org.apache.stylebook.StyleBook"/>

	<property name="constants.file" value="org/apache/james/Constants.java"/>

	<property name="build.dir" value="./build"/>
	<property name="build.src" value="./build/src"/>
	<property name="build.dest" value="./build/classes"/>
        <property name="build.docs" value="./build/docs"/>
        <property name="build.mailetdocs" value="./build/mailetdocs"/>
	<property name="build.javadocs" value="./build/javadocs"/>

	<property name="dist.dir" value="./dist"/>

	<property name="site.dir" value="../xml-site/sources/james"/>
	<property name="site.docs" value="../xml-site/targets/james"/>
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="JAMES Build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   block-archive  --> generates the James.bar file (default)"/>
    <echo message="   auxiliary-jars  --> generates the mailet.jar and the simple-server-demo.bar"/>
    <echo message="   compile  --> compiles the source code"/>
    <echo message="   dist     --> generates the JAMES distribution"/>
    <echo message="   clean    --> cleans up the directory"/>
    <echo message="   javadoc  --> creates the Javadoc"/>
    <echo message="   javadocmailet --> creates the Javadoc for the mailet API"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Copies the source code                                              -->
  <!-- =================================================================== -->
  <target name="prepare-src" depends="prepare">
    <!-- create directories -->
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>

    <!-- copy src files -->
    <copydir src="${src.dir}" dest="${build.src}" excludes="**/CVS/**,*.xml"/>

    <!-- substitute tokens as needed -->
    <replace file="${build.src}/${constants.file}" token="@@version@@" value="${version}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare-src">
    <javac srcdir="${build.src}" destdir="${build.dest}" classpath="${classpath}"
           debug="${debug}"
           deprecation="on"/>

    <copydir src="${build.src}" dest="${build.dest}">
      <include name="**/*.properties"/>
      <include name="**/*.xinfo"/>
    </copydir>

    <copyfile src="${src.dir}/org/apache/james/${name}.conf.xml"
              dest="${build.dest}/conf/${name}.conf.xml"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the JAMES.bar archive                                       -->
  <!-- =================================================================== -->
  <target name="block-archive" depends="compile">
    <jar jarfile="${build.dir}/${name}.bar" basedir="${build.dest}" manifest="${build.src}/Manifest.mf" includes="org/**,conf/**" excludes="org/apache/avalon/demos/**,conf/*demo.conf.xml"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the mailet.jar                                              -->
  <!-- =================================================================== -->
  <target name="auxiliary-jars" depends="compile">
    <jar jarfile="${build.dir}/mailet.jar" basedir="${build.dest}" manifest="${build.src}/Manifest.mf" includes="org/apache/mailet/**"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the distribution                                            -->
  <!-- =================================================================== -->
<!--  <target name="dist" depends="block-archive, auxiliary-jars, docs, javadocs"> -->
  <target name="dist" depends="block-archive, auxiliary-jars">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/bin"/>
    <mkdir dir="${dist.dir}/bin/blocks"/>
    <mkdir dir="${dist.dir}/src"/>
    <mkdir dir="${dist.dir}/conf"/>
    <mkdir dir="${dist.dir}/docs"/>

    <copydir src="${build.src}" dest="${dist.dir}/src" excludes="james.conf.xml"/>
    <copydir src="./docs/" dest="${dist.dir}/docs"/>

    <copyfile src="${build.dir}/${name}.bar" dest="${dist.dir}/bin/blocks/${name}.bar"/>
    <copyfile src="./lib/avalon-core-blocks.bar" dest="${dist.dir}/bin/blocks/avalon-core-blocks.bar"/>
    <copyfile src="./lib/avalon-engine.jar" dest="${dist.dir}/bin/avalon-engine.jar"/>
    <copyfile src="./lib/avalon-loader.jar" dest="${dist.dir}/bin/avalon-loader.jar"/>
    <copyfile src="./lib/avalonapi.jar" dest="${dist.dir}/lib/avalonapi.jar"/>
    <copyfile src="./lib/activation.jar" dest="${dist.dir}/lib/activation.jar"/>
    <copyfile src="./lib/mail_1_2.jar" dest="${dist.dir}/lib/mail_1_2.jar"/>
    <copyfile src="./lib/xerces.jar" dest="${dist.dir}/lib/xerces.jar"/>
    <copyfile src="./lib/dnsjava.jar" dest="${dist.dir}/lib/dnsjava.jar"/>
    <copyfile src="./lib/town.jar" dest="${dist.dir}/lib/town.jar"/>
    <copyfile src="${build.dir}/mailet.jar" dest="${dist.dir}/lib/mailet.jar"/>

    <copyfile src="./res/run.bat" dest="${dist.dir}/bin/run.bat"/>
    <copyfile src="./res/run.sh" dest="${dist.dir}/bin/run.sh"/>
    <copyfile src="./res/avalonTestKeys" dest="${dist.dir}/conf/avalonTestKeys"/>
    <chmod dir="${dist.dir}" perm="go-rwx" />
    <chmod file="${dist.dir}/bin/run.sh" perm="u+x"/>
    <fixcrlf srcdir="${dist.dir}" cr="add" includes="**/*.bat" />
    <fixcrlf srcdir="${dist.dir}" cr="remove" includes="**/*.sh" />

    <copyfile src="./res/maildatabase-odbc" dest="${dist.dir}/var/maildatabase-odbc"/>
    <copyfile src="./res/maildatabase-sqlserver" dest="${dist.dir}/var/maildatabase-sqlserver"/>
    <copyfile src="./res/maildatabase-mysql" dest="${dist.dir}/var/maildatabase-mysql"/>

    <copyfile src="README" dest="${dist.dir}/README"/>
    <replace file="${dist.dir}/README" token="@@version@@" value="${version}"/>
    <copyfile src="LICENSE" dest="${dist.dir}/LICENSE"/>
    <copyfile src="build.xml" dest="${dist.dir}/build.xml"/>

    <zip zipfile="${name}-${version}.zip" basedir="${dist.dir}" includes="**"/>
    <tar tarfile="${name}-${version}.tar" basedir="${dist.dir}" includes="**"/>
    <gzip zipfile="${name}-${version}.tar.gz" src="${name}-${version}.tar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <deltree dir="${build.dir}"/>
    <deltree dir="${dist.dir}"/>
    <deltree dir="${build.docs}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Generates the javadoc                                               -->
  <!-- =================================================================== -->
  <target name="javadoc" depends="prepare-src">
    <mkdir dir="${build.docs}"/>
    <javadoc sourcepath="${build.src}"
        destdir="${build.docs}"
        packagenames="org.apache.james.*,org.apache.james.core.*,org.apache.james.dnsserver.*,org.apache.james.filestorage.*,org.apache.james.mailrepository.*,org.apache.james.pop3server.*,org.apache.james.remotemanager.*,org.apache.james.services.*,org.apache.james.smtpserver.*,org.apache.james.transport.*,org.apache.james.transport.matchers.*,org.apache.james.transport.mailets.*,org.apache.james.usersrepository.*,org.apache.james.util.*,org.apache.mail.mailets.*"
        classpath="${classpath}"
	use="true"
        />
  </target>

  <!-- =================================================================== -->
  <!-- Generates the javadoc for the mailet API                            -->
  <!-- =================================================================== -->
  <target name="javadocmailet" depends="prepare-src">
    <mkdir dir="${build.mailetdocs}"/>
    <javadoc sourcepath="${build.src}"
        destdir="${build.mailetdocs}"
        packagenames="org.apache.mailet.*"
        classpath="${classpath}"
        />
  </target>
</project>


<!-- End of file -->