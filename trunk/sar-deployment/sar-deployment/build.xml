<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->
<project default="main" name="sar-deployment">
  <description>Builds sar-deployment module. This is an deployment module.</description>
  <property name="name.module" value="sar-deployment" />
  <import file="../build-tools/deployment-build.xml" optional="no" />

  <property name="tools.dir" value="tools"/>
  <property name="tools.lib.dir" value="${tools.dir}/lib"/>
	
  <path id="tools.class.path">
      <fileset dir="${tools.lib.dir}">
          <include name="*.jar"/>
      </fileset>
  </path>

  <taskdef name="sar" classname="org.apache.avalon.phoenix.tools.tasks.Sar">
      <classpath refid="tools.class.path"/>
  </taskdef>

  <!--
  ===================================================================
                                 jmx
  ===================================================================
  -->

  <!-- Make .xinfo, .mxinfo and manifest automatically for blocks -->
  <target name="prepare-mxinfo">
      <taskdef name="generatemeta" classname="org.apache.avalon.phoenix.tools.metagenerate.MetaGenerateTask">
          <classpath refid="tools.class.path"/>
      </taskdef>

      <mkdir dir="${dir.build.bin}" />

      <generatemeta dest="${dir.build.bin}">
          <fileset dir="${dir.src.java}">
              <include name="**/*.java"/>
          </fileset>
      </generatemeta>

  </target>

  <target name="sar" depends="dist">

      <echo message="Making James Sarfile (james.sar)"/>

      <!-- Make sar file-->
      <sar sarfile="${dir.stage.james}/${jars-prefix}${name.module}-${version}.sar" config="${dir.src.conf}/james-config.xml"
             environment="${dir.src.conf}/james-server.xml" assembly="${dir.src.conf}/james-assembly.xml">
          <lib dir='${lib.dir}/${path.lib.activeio}' includes='${jarname.activeio}'/>
          <lib dir='${lib.dir}/${path.lib.geronimo}'>
              <include name='${jarname.j2ee-management-spec}'/>
              <include name='${jarname.jms-spec}'/>
          </lib>   
          <lib dir='${lib.dir}/${path.lib.activemq}'>
              <include name='${jarname.activemq-web}'/>
              <include name='${jarname.activemq-console}'/>
              <include name='${jarname.activemq-core}'/>
              <include name='${jarname.activemq-jaas}'/>    
           </lib>   
           <lib dir='${lib.dir}/${path.lib.jackrabbit}'>
              <include name='${jarname.jackrabbit-api}'/>
              <include name='${jarname.jackrabbit-commons}'/>
              <include name='${jarname.jackrabbit-rmi}'/>    
           </lib>   
          <lib dir="${lib.dir}/${path.lib.jcr}" includes="${jarname.jcr}" />   
          <lib dir='${lib.dir}/${path.lib.backport-util-concurrent}' includes="${jarname.backport-concurrent}" />
          <lib dir="${lib.dir}/${path.lib.dns}" includes="${jarname.dns.jar}" />
          <lib dir="${lib.dir}/${path.lib.oro}" includes="${jarname.jakarta-oro.jar}" />
          <lib dir="${lib.dir}/${path.lib.derby}" includes="${jarname.derby.jar}" />
          <lib dir="${lib.dir}/${path.lib.excaliburdatasource}" includes="${jarname.excalibur-datasource.jar}" />
          <lib dir="${lib.dir}/${path.lib.activation}" includes="${jarname.javax-activation.jar}" />
          <lib dir="${lib.dir}/${path.lib.javamail}" includes="${jarname.javax-mail.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonsdbcp}" includes="${jarname.commons-dbcp.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonspool}" includes="${jarname.commons-pool.jar}" />
          <lib dir="${lib.dir}/${path.lib.excaliburthread}" includes="${jarname.excalibur-thread-api.jar}" />
          <lib dir="${lib.dir}/${path.lib.excaliburthread}" includes="${jarname.excalibur-thread-impl.jar}" />
          <lib dir="${lib.dir}/${path.lib.excaliburpool}" includes="${jarname.excalibur-pool-api.jar}" />
          <lib dir="${lib.dir}/${path.lib.excaliburpool}" includes="${jarname.excalibur-pool-impl.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonscollections}" includes="${jarname.commons-collections.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonethreads}" includes="${jarname.cornerstone-threads-api.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonethreads}" includes="${jarname.cornerstone-threads-impl.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstoneconnection}" includes="${jarname.cornerstone-connection-api.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstoneconnection}" includes="${jarname.cornerstone-connection-impl.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonestore}" includes="${jarname.cornerstone-store-api.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonescheduler}" includes="${jarname.cornerstone-scheduler-api.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonescheduler}" includes="${jarname.cornerstone-scheduler-impl.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonesockets}" includes="${jarname.cornerstone-sockets-api.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonesockets}" includes="${jarname.cornerstone-sockets-impl.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonedatasources}" includes="${jarname.cornerstone-datasources-api.jar}" />
          <lib dir="${lib.dir}/${path.lib.cornerstonedatasources}" includes="${jarname.cornerstone-datasources-impl.jar}" />
          <lib dir="${lib.dir}/${path.lib.concurrent}" includes="${jarname.concurrent.jar}" />
          <lib dir="${lib.dir}/${path.lib.james}" includes="${jarname.jspf.jar}" />
          <lib dir="${lib.dir}/${path.lib.mstor}" includes="${jarname.mstor.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonslogging}" includes="${jarname.commons-logging.jar}" />
          <lib dir="${lib.dir}/${path.lib.jdom}" includes="${jarname.jdom.jar}" />
          <lib dir="${lib.dir}/${path.lib.xstream}" includes="${jarname.xstream.jar}" />
          <lib dir="${lib.dir}/${path.lib.torque}" includes="${jarname.torque.jar}" />
          <lib dir="${lib.dir}/${path.lib.village}" includes="${jarname.village.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonslang}" includes="${jarname.commons-lang.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonsconfiguration}" includes="${jarname.commons-configuration.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonsbeanutils}" includes="${jarname.commons-beanutils.jar}" />
          <lib dir="${lib.dir}/${path.lib.james}" includes="${jarname.jsieve.jar}" />
          <lib dir="${lib.dir}/${path.lib.james}" includes="${jarname.mailet.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonsdigester}" includes="${jarname.commons-digester.jar}" />
          <lib dir="${lib.dir}/${path.lib.commonsio}" includes="${jarname.commons-io.jar}" />
          <lib dir="${lib.dir}/${path.lib.james}" includes="${jarname.mime4j.jar}" />
          <lib dir="${lib.dir}/${path.lib.james}" includes="${jarname.std-mailet.jar}"/>   
          <lib dir="${lib.dir}/${path.lib.james}" includes="${jarname.base-mailet.jar}"/>                  
          <!-- include every api, library and function -->
          <!-- TODO this should list exactly the module defined, without wildcards -->
          <lib dir="${lib.dir}/${path.lib.james}">
            <include name="${jars-prefix}*-api-${version}.jar" />
            <include name="${jars-prefix}*-util-${version}.jar" />
            <include name="${jars-prefix}*-library-${version}.jar" />
            <include name="${jars-prefix}*-function-${version}.jar" />
          	<!-- include the jar generated by this module -->
          	<include name="${jars-prefix}${name.module}-${version}.jar" />
          </lib>
          <zipfileset dir="${dir.src.conf}" fullpath="conf/sqlResources.xml">
              <include name="sqlResources.xml"/>
          </zipfileset>
          <zipfileset dir="${dir.src.conf}" fullpath="conf/mailboxManagerSqlResources.xml">
              <include name="mailboxManagerSqlResources.xml"/>
          </zipfileset>
          <zipfileset dir="${dir.src.conf}" fullpath="conf/james-fetchmail.xml">
              <include name="james-fetchmail.xml"/>
          </zipfileset>
          <zipfileset dir="${dir.src.conf}" fullpath="conf/james-smtphandlerchain.xml">
              <include name="james-smtphandlerchain.xml"/>
          </zipfileset>
          <zipfileset dir="${dir.src.conf}" fullpath="conf/miResources.xml">
              <include name="miResources.xml"/>
          </zipfileset>
          <zipfileset dir="${dir.src.conf}" fullpath="conf/james-listmanager.xml">
              <include name="james-listmanager.xml"/>
          </zipfileset>
          <zipfileset dir="${dir.src.conf}" fullpath="conf/james-liststores.xml">
              <include name="james-liststores.xml"/>
          </zipfileset>
          <zipfileset dir="${dir.src.conf}" fullpath="conf/james-jms.xml">
              <include name="james-jms.xml"/>
          </zipfileset>
          <zipfileset dir="${dir.src.conf}/samples/fetchmail" prefix="conf/samples/fetchmail">
              <include name="*.xml"/>
          </zipfileset>
      </sar>
  </target>

  <target name="everything" depends="sar" description="generate avalon specific jar and sar files" />
	
</project>
