<?xml version="1.0"?>
<!--
                                README!

    Please fill the DNSservers.server tag with the value of your DNS.

    <dnsServer>
        <servers>
            <server> [hear goes your dns] </server>
        </servers>
    </dnsServer>

    You can set as many dns as you want.

-->
<avalon>
    <servicesmap>
        <service name="JamesMailServer">
            <resource type="org.apache.avalon.blocks.Logger" mapTo="JamesLogger"/>
            <resource type="org.apache.avalon.blocks.ThreadManager" mapTo="ApacheDefaultThreadManager"/>
            <resource type="org.apache.avalon.blocks.Store" mapTo="JamesObjectStore"/>
            <resource type="org.apache.avalon.blocks.ConnectionManager" mapTo="ApacheDefaultConnectionManager"/>
            <resource type="org.apache.avalon.blocks.TimeServer" mapTo="ApacheDefaultTimeServer"/>
            <resource type="org.apache.avalon.blocks.SocketServer" mapTo="ApacheDefaultSocketServer"/>
        </service>
        <service name="JamesObjectStore">
            <resource type="org.apache.avalon.blocks.Logger" mapTo="ApacheDefaultLogger"/>
            <resource type="org.apache.avalon.blocks.Store" mapTo="ApacheDefaultStore"/>
        </service>
    </servicesmap>

    <blocks>
        <block class="org.apache.james.James"
               name="JamesMailServer"
               implementedInterface="org.apache.avalon.blocks.MailServer">

            <postmaster> Postmaster@localhost </postmaster>
            <servernames>
<!--            <servername> To override autodetected server names uncomment this. </servername> -->
<!--            <servername> To override autodetected server names uncomment this. </servername> -->
<!--            <servername> To override autodetected server names uncomment this. </servername> -->
            </servernames>
<!-- Place here the path where incoming mail are temporaly stored before beeing processed.
     (ex. file://c:/james/spool/) -->
            <spoolRepository> file://../var/mail/spool/ </spoolRepository>

            <inboxRepository> file://../var/mail/localinbox/ </inboxRepository>

            <smtpServer>
                <port>25</port>
<!--                <bind>  </bind>  uncomment this if you want to bind to a specific inetaddress-->
                <smtphandler>
                    <connectiontimeout> 360000 </connectiontimeout>
                </smtphandler>
            </smtpServer>

            <pop3Server>
                <port>110</port>
<!--            <port>995</port> -->
<!-- port 995 is the well-known/IANA registered port for POP3S ie over SSL/TLS -->
<!--                <bind>  </bind>  uncomment this if you want to bind to a specific inetaddress-->
<!--                <useTLS>TRUE</useTLS> uncomment this if you want to use TLS (SSL) on this port -->
                <pop3handler>
                    <connectiontimeout> 120000 </connectiontimeout>
                </pop3handler>
            </pop3Server>

            <remoteManager>
                <port>4555</port>
<!--                <bind>  </bind> uncomment this if you want to bind to a specific inetaddress-->
<!--                <useTLS>TRUE</useTLS> uncomment this if you want to use TLS (SSL) on this port -->
                <administrator_accounts>
                    <account login="root" password="root"/>
                </administrator_accounts>
                <connectiontimeout> 60000 </connectiontimeout>
            </remoteManager>

            <dnsServer>
                <servers>
<!--                <server> FILL ME!!!! </server> -->
<!--                <server> FILL ME!!!! </server> -->
                </servers>
                <authoritative>false</authoritative>
            </dnsServer>

            <usersManager>
                <repository> file://../var/users/ </repository>
            </usersManager>

            <spoolmanagerthreads> 1 </spoolmanagerthreads>
            <spoolmanager>

                <mailetpackages>
                    <mailetpackage>org.apache.james.transport.mailets.</mailetpackage>
                </mailetpackages>
<!--        Processor CONFIGURATION SAMPLE: root is the first processor all mails enter -->
                <processor name="root">
                    <mailet match="RecipientIs=badboy@badhost" class="Null">
                    </mailet>
                    <mailet match="RelayLimit=30" class="Null">
                    </mailet>
                    <mailet match="RecipientIs=administrator@localhost" class="Forward">
                        <forwardto> root@localhost </forwardto>
                    </mailet>
                    <mailet match="RecipientIs=james-on@localhost" class="PicoListManager">
                        <subscribe> james-on </subscribe>
                        <unsubscribe> james-off </unsubscribe>
                        <listName> james </listName>
                    </mailet>
                    <mailet match="RecipientIs=james-off@localhost" class="PicoListManager">
                        <subscribe> james-on </subscribe>
                        <unsubscribe> james-off </unsubscribe>
                        <listName> james </listName>
                    </mailet>
                    <mailet match="RecipientIs=james@localhost" class="PicoListserv">
                        <membersonly> false </membersonly>
                        <attachmentsallowed> true </attachmentsallowed>
                        <replytolist> true </replytolist>
                        <listName> james </listName>
                    </mailet>
                    <mailet match="All" class="ToProcessor">
                        <processor> transport </processor>
                    </mailet>
                </processor>
<!--        Processor CONFIGURATION SAMPLE: error is the processor mails with failure conditions enter -->
                <processor name="error">
                    <mailet match="All" class="ToRepository">
                        <repositoryPath> file://../var/mail/error/</repositoryPath>
                        <passThrough> false </passThrough>
                    </mailet>
                </processor>
<!--        Processor CONFIGURATION SAMPLE: transport is a sample custom processor for local or remote delivery -->
                <processor name="transport">
                    <mailet match="RecipientIsLocal" class="LocalDelivery">
                    </mailet>
                    <mailet match="All" class="RemoteDelivery">
                        <delayed> file://../var/mail/delayed/ </delayed>
                        <delayTime> 21600000 </delayTime>
                        <maxRetries> 5 </maxRetries>
                    </mailet>
                </processor>
            </spoolmanager>
        </block>

        <block class="org.apache.avalon.blocks.masterstore.MasterStore"
                name="JamesObjectStore"
                implementedInterface="org.apache.avalon.blocks.Store"
                help="This is an imlpementation of the Store interface and
                    provides a powerful interface to store any kind of objects. Its
                    power resides in its pluggable pattern.">
            <repositoriesDefinition help="Here goes Repository definitions. If
            an application needs its own Repository (see MailRepository
            for JAMES), it will place here its definition. These are default
            Repository.">
                <repository type="OBJECT" model="SYNCHRONOUS, ASYNCHRONOUS"
                    destination="file://"
                    class="org.apache.avalon.blocks.masterstore.PersistentStore"/>
                <repository type="STREAM" model="SYNCHRONOUS, ASYNCHRONOUS"
                    destination="file://"
                    class="org.apache.avalon.blocks.masterstore.StreamStore"/>
                <repository type="MAIL" model="SYNCHRONOUS, ASYNCHRONOUS"
                    destination="file://"
                    class="org.apache.james.MailRepository"/>
                <repository type="USER" model="SYNCHRONOUS, ASYNCHRONOUS"
                    destination="file://"
                    class="org.apache.james.usermanager.UsersRepository"/>
            </repositoriesDefinition>
            <publicrepositories help="When an application needs a Repository for
                    its personal use it can just ask for a private Repository which will
                    be available only to caller application. If, on the other side, it
                    needs to share that repository with other Block the Repository must
                    be defined public since none of these block has 'the right' to own
                    Repository configurations. Place here any public Repository definition">

<!--            <repository name="MyRepository" type="OBJECT" model="SYNCHRONOUS"> file://../myfolder/ </repository> -->
            </publicrepositories>
        </block>

        <block class="org.apache.avalon.blocks.omero.Omero"
               name="JamesLogger"
               implementedInterface="org.apache.avalon.blocks.Logger"
               help="Provides a pluggable logging system">
            <timestamp>
                <granularity help="Sets the timestamp time granularity in
                        milliseconds. If set to 0 means to use maximum time precision
                        else timestam is calculated every 'granularity' milliseconds">
                    0
                </granularity>
                <format help="Define the format for the timestamp">
                    yyyy.MM.dd hh:mm:ss SSS
                </format>
            </timestamp>
            <channels help="Every log call is performed througt a channel.
                    The proposed pattern is: each application (Block) should use its own
                    channel to allow adminitrators to set what to log from that
                    application and where to place logs. So if you plug a new server
                    under Avalon you MUST place channel definition from that server
                    configuration file hereafter">
                <channel name="default"      loglevel="DEBUG"  logwriter="mailet"/>
                <channel name="JamesSystem"  loglevel="DEBUG"  logwriter="jamesfile"/>
                <channel name="SMTP"         loglevel="DEBUG"  logwriter="netfile"/>
                <channel name="DNS"          loglevel="DEBUG"  logwriter="dnsfile"/>
                <channel name="POP3"         loglevel="DEBUG"  logwriter="netfile"/>
                <channel name="IMAP"         loglevel="DEBUG"  logwriter="netfile"/>
                <channel name="RemoteAdmin"  loglevel="DEBUG"  logwriter="netfile"/>
                <channel name="Mailets"      loglevel="DEBUG"  logwriter="mailet"/>
                <channel name="Processor"    loglevel="DEBUG"  logwriter="jamesfile"/>
                <channel name="Test"         loglevel="DEBUG"  logwriter="test"/>
                <channel name="UserManager"  loglevel="DEBUG"  logwriter="usersfile"/>

            </channels>
            <logwriters help="Each filtered channel goes to the specified logwriter.
                    Place here any additionl logwriter definition needed">
                <writer name="default" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination> file://../logs/default.log </destination>
                    <buffersize>2048</buffersize>
                    <sleep>500</sleep>
                </writer>
                <writer name="jamesfile" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination> file://../logs/jamesfile.log </destination>
                    <buffersize>2048</buffersize>
                    <sleep>500</sleep>
                </writer>
                <writer name="usersfile" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination> file://../logs/usersfile.log </destination>
                    <buffersize>2048</buffersize>
                    <sleep>500</sleep>
                </writer>
                <writer name="netfile" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination> file://../logs/netfile.log </destination>
                    <buffersize>2048</buffersize>
                    <sleep>500</sleep>
                </writer>
                <writer name="mailet" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination> file://../logs/mailet.log </destination>
                    <buffersize>2048</buffersize>
                    <sleep>500</sleep>
                </writer>
                <writer name="test" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination> file://../logs/test.log </destination>
                    <buffersize>2048</buffersize>
                    <sleep>500</sleep>
                </writer>
                <writer name="dnsfile" class="org.apache.avalon.blocks.omero.FileWriter">
                    <destination> file://../logs/dns.log </destination>
                    <buffersize>2048</buffersize>
                    <sleep>500</sleep>
                </writer>
            </logwriters>
        </block>

    </blocks>
</avalon>
